{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Run All Pester Tests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Invoke-Pester -Configuration (Import-PowerShellDataFile -Path 'tests/config/PesterConfiguration.psd1')"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Run Specific Module Tests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "param($ModuleName); Invoke-Pester -Path \"tests/unit/modules/$ModuleName\" -Output Detailed"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "PowerShell Script Analysis",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Invoke-ScriptAnalyzer -Path '${file}' -Settings 'pwsh/PSScriptAnalyzerSettings.psd1' -Recurse"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Setup Development Environment",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "& './core-runner/setup-test-env.ps1'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Import All Modules",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Get-ChildItem -Path 'core-runner/modules' -Directory | ForEach-Object { Import-Module $_.FullName -Force -Verbose }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "OpenTofu Plan",
            "type": "shell",
            "command": "tofu",
            "args": [
                "plan",
                "-out=tfplan"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}/opentofu/infrastructure"
            }
        },
        {
            "label": "OpenTofu Apply",
            "type": "shell",
            "command": "tofu",
            "args": [
                "apply",
                "tfplan"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}/opentofu/infrastructure"
            }
        },
        {
            "label": "Generate Test Report",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "$config = Import-PowerShellDataFile -Path 'tests/config/PesterConfiguration.psd1'; $config.TestResult.Enabled = $true; Invoke-Pester -Configuration $config"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Clean Test Results",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Remove-Item -Path 'tests/results/*' -Force -Recurse -ErrorAction SilentlyContinue; Write-Host 'Test results cleaned'"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "Validate All Module Manifests",
            "type": "shell",
            "command": "pwsh",
            "args": [
                "-Command",
                "Get-ChildItem -Path 'core-runner/modules' -Filter '*.psd1' -Recurse | ForEach-Object { Write-Host \"Validating $($_.Name)\"; Test-ModuleManifest $_.FullName }"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        }
    ]
}