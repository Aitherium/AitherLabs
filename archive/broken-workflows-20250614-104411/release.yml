---
name: Package and Release CodeFixer Module

on:
 push:
 tags:
 - 'v*'
 workflow_dispatch:
 inputs:
 version:
 description: 'Version to release (e.g., 1.0.0)'
 required: true
 default: '1.0.0'

jobs:
  package-and-release:
  runs-on: ubuntu-latest
  steps:
      - name: Checkout code
  uses: actions/checkout@v4

      - name: Install PowerShell
  shell: bash
  run: 
 # PowerShell is pre-installed on ubuntu-latest
 pwsh --version

      - name: Setup PowerShell modules
  shell: pwsh
  run: 
 Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser
 Install-Module -Name Pester -Force -Scope CurrentUser -MinimumVersion 5.0

      - name: Set version
  shell: pwsh
  run: 
 if ('${{ github.event_name }}' -eq 'workflow_dispatch') {
 $version = '${{ github.event.inputs.version }}'
 } else {
 $version = '${{ github.ref_name }}' -replace '^v', ''
 }
 echo "VERSION=$version" >> $env:GITHUB_ENV
 Write-Host "Building version: $version"

      - name: Update module version
  shell: pwsh
  run: 
 $manifestPath = "./pwsh/modules/CodeFixer/CodeFixer.psd1"
 $content = Get-Content $manifestPath -Raw
 $content = $content -replace "ModuleVersion\s*=\s*'^'*'", "ModuleVersion = '$env:VERSION'"
 Set-Content $manifestPath $content
 Write-Host "Updated manifest version to $env:VERSION"

      - name: Run tests
  shell: pwsh
  run: 
 ./scripts/final-validation.ps1

      - name: Package module
  shell: pwsh
  run: 
 $packageDir = "release-package"
 $moduleDir = "$packageDir/CodeFixer"

 # Create package structure
 New-Item -ItemType Directory -Path $moduleDir -Force

 # Copy module files
 Copy-Item -Path "./pwsh/modules/CodeFixer/*" -Destination $moduleDir -Recurse -Force

 # Create simple installation script
 $installContent = "# CodeFixer Installation`nCopy-Item -Path '.\CodeFixer' -Destination '`$env:USERPROFILE\Documents\PowerShell\Modules\' -Recurse -Force`nWrite-Host 'CodeFixer installed! Use: Import-Module CodeFixer'"
 Set-Content "$packageDir/Install.ps1" $installContent

 # Create release notes
 $readmeContent = "# CodeFixer v$env:VERSION`n`nPowerShell module for code validation and batch processing.`n`nInstall: Run Install.ps1`nUsage: Import-Module CodeFixer"
 Set-Content "$packageDir/README.md" $readmeContent

 # Create zip archive
 Compress-Archive -Path "$packageDir/*" -DestinationPath "CodeFixer-v$env:VERSION.zip" -Force
 Write-Host "Package created: CodeFixer-v$env:VERSION.zip"

      - name: Create Release
  uses: softprops/action-gh-release@v1
  with:
 tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', github.event.inputs.version)  github.ref_name }}
  name: CodeFixer Module v${{ env.VERSION }}
  body: 
 ## CodeFixer PowerShell Module v${{ env.VERSION }}

 ### Key Features
 - **Batch Processing**: Analyze hundreds of PowerShell files efficiently
 - **Parallel Execution**: Utilize multiple CPU cores for faster validation
 - **Auto-Fix**: Automatically resolve common PowerShell issues
 - **Import Analysis**: Modernize module import patterns
 - **Comprehensive Validation**: Full project health checks

 ### Installation
 1. Download `CodeFixer-v${{ env.VERSION }}.zip`
 2. Extract and run `Install-CodeFixer.ps1`
 3. Import with `Import-Module CodeFixer`

 ### Quick Start
 ```powershell
 # Analyze with batch processing
 Invoke-PowerShellLint -Path "." -Parallel

 # Full project validation
 Invoke-ComprehensiveValidation
 ```

 ### Requirements
 - PowerShell 7.0+
 - PSScriptAnalyzer module (auto-installed)
  files: 
 CodeFixer-v${{ env.VERSION }}.zip
  draft: false
  prerelease: false
  env:
 GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}