<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="698" errors="0" failures="208" not-run="0" inconclusive="0" ignored="0" skipped="274" invalid="0" date="2025-06-12" time="01:38:34">
  <environment platform="Linux" clr-version="8.0.1" os-version="6.8.0-1027-azure" machine-name="codespaces-465dd5" user-domain="" nunit-version="2.5.8.0" user="codespace" cwd="/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/72663523-d9d0-4049-a193-53c4683241f4" />
  <culture-info current-culture="" current-uiculture="" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="21.2098" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0000_Cleanup-Files.Tests.ps1" executed="True" result="Failure" success="False" time="0.5454" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0000_Cleanup-Files.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0000_Cleanup-Files Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0000_Cleanup-Files Tests">
            <results>
              <test-suite type="TestFixture" name="0000_Cleanup-Files Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0000_Cleanup-Files Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0000_Cleanup-Files Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0000_Cleanup-Files Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0000_Cleanup-Files Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0000_Cleanup-Files Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0000_Cleanup-Files Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0001_Reset-Git.Tests.ps1" executed="True" result="Failure" success="False" time="0.0634" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0001_Reset-Git.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0001_Reset-Git Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0001_Reset-Git Tests">
            <results>
              <test-suite type="TestFixture" name="0001_Reset-Git Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0001_Reset-Git Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0001_Reset-Git Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0001_Reset-Git Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0001_Reset-Git Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0001_Reset-Git Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0001_Reset-Git Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0002_Setup-Directories.Tests.ps1" executed="True" result="Failure" success="False" time="0.0655" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0002_Setup-Directories.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0002_Setup-Directories Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0002_Setup-Directories Tests">
            <results>
              <test-suite type="TestFixture" name="0002_Setup-Directories Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0002_Setup-Directories Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0002_Setup-Directories Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0002_Setup-Directories Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0002_Setup-Directories Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0002_Setup-Directories Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0002_Setup-Directories Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0006_Install-ValidationTools.Tests.ps1" executed="True" result="Ignored" success="True" time="0.2798" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0006_Install-ValidationTools.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests" executed="True" result="Ignored" success="True" time="0.1868" asserts="0" description="0006_Install-ValidationTools Tests">
            <results>
              <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0683" asserts="0" description="0006_Install-ValidationTools Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0006_Install-ValidationTools Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0374" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0006_Install-ValidationTools Tests.Script Structure Validation.should follow naming conventions" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0006_Install-ValidationTools Tests.Script Structure Validation.should define expected functions" time="0.0045" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.078" asserts="0" description="0006_Install-ValidationTools Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0006_Install-ValidationTools Tests.Parameter Validation.should accept Config parameter" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.1048" asserts="0" description="0006_Install-ValidationTools Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0006_Install-ValidationTools Tests.Installation Tests.should validate prerequisites" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0006_Install-ValidationTools Tests.Installation Tests.should handle download failures gracefully" time="0.0071" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0006_Install-ValidationTools Tests.Installation Tests.should verify installation success" time="0.0054" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests.Install-Cosign Function Tests" executed="True" result="Ignored" success="True" time="0.1351" asserts="0" description="0006_Install-ValidationTools Tests.Install-Cosign Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0006_Install-ValidationTools Tests.Install-Cosign Function Tests.should be defined and accessible" time="0.005" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0006_Install-ValidationTools Tests.Install-Cosign Function Tests.should support common parameters" time="0.007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0006_Install-ValidationTools Tests.Install-Cosign Function Tests.should handle execution with valid parameters" time="0.0039" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0006_Install-ValidationTools Tests.Find-Gpg Function Tests" executed="True" result="Ignored" success="True" time="0.1611" asserts="0" description="0006_Install-ValidationTools Tests.Find-Gpg Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0006_Install-ValidationTools Tests.Find-Gpg Function Tests.should be defined and accessible" time="0.0072" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0006_Install-ValidationTools Tests.Find-Gpg Function Tests.should handle execution with valid parameters" time="0.0093" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0007_Install-Go.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0878" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0007_Install-Go.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0007_Install-Go Tests" executed="True" result="Ignored" success="True" time="0.0419" asserts="0" description="0007_Install-Go Tests">
            <results>
              <test-suite type="TestFixture" name="0007_Install-Go Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.025" asserts="0" description="0007_Install-Go Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0007_Install-Go Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0051" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0007_Install-Go Tests.Script Structure Validation.should follow naming conventions" time="0.0076" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0007_Install-Go Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0346" asserts="0" description="0007_Install-Go Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0007_Install-Go Tests.Parameter Validation.should accept Config parameter" time="0.0032" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0008_Install-OpenTofu.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1248" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0008_Install-OpenTofu.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0008_Install-OpenTofu Tests" executed="True" result="Ignored" success="True" time="0.0681" asserts="0" description="0008_Install-OpenTofu Tests">
            <results>
              <test-suite type="TestFixture" name="0008_Install-OpenTofu Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.018" asserts="0" description="0008_Install-OpenTofu Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0008_Install-OpenTofu Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0008_Install-OpenTofu Tests.Script Structure Validation.should follow naming conventions" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0008_Install-OpenTofu Tests.Script Structure Validation.should define expected functions" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0008_Install-OpenTofu Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.029" asserts="0" description="0008_Install-OpenTofu Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0008_Install-OpenTofu Tests.Parameter Validation.should accept Config parameter" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0008_Install-OpenTofu Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0436" asserts="0" description="0008_Install-OpenTofu Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0008_Install-OpenTofu Tests.Installation Tests.should validate prerequisites" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0008_Install-OpenTofu Tests.Installation Tests.should handle download failures gracefully" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0008_Install-OpenTofu Tests.Installation Tests.should verify installation success" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0008_Install-OpenTofu Tests.Install-OpenTofu Function Tests" executed="True" result="Ignored" success="True" time="0.0588" asserts="0" description="0008_Install-OpenTofu Tests.Install-OpenTofu Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0008_Install-OpenTofu Tests.Install-OpenTofu Function Tests.should be defined and accessible" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0008_Install-OpenTofu Tests.Install-OpenTofu Function Tests.should support common parameters" time="0.0035" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0008_Install-OpenTofu Tests.Install-OpenTofu Function Tests.should handle execution with valid parameters" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0009_Initialize-OpenTofu.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1336" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0009_Initialize-OpenTofu.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0009_Initialize-OpenTofu Tests" executed="True" result="Ignored" success="True" time="0.0663" asserts="0" description="0009_Initialize-OpenTofu Tests">
            <results>
              <test-suite type="TestFixture" name="0009_Initialize-OpenTofu Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0353" asserts="0" description="0009_Initialize-OpenTofu Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0009_Initialize-OpenTofu Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0114" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0009_Initialize-OpenTofu Tests.Script Structure Validation.should follow naming conventions" time="0.0071" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0009_Initialize-OpenTofu Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0539" asserts="0" description="0009_Initialize-OpenTofu Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0009_Initialize-OpenTofu Tests.Parameter Validation.should accept Config parameter" time="0.0058" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0010_Prepare-HyperVProvider.Tests.ps1" executed="True" result="Ignored" success="True" time="0.2191" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0010_Prepare-HyperVProvider.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests" executed="True" result="Ignored" success="True" time="0.1456" asserts="0" description="0010_Prepare-HyperVProvider Tests">
            <results>
              <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0844" asserts="0" description="0010_Prepare-HyperVProvider Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0010_Prepare-HyperVProvider Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.01" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0010_Prepare-HyperVProvider Tests.Script Structure Validation.should follow naming conventions" time="0.0624" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0010_Prepare-HyperVProvider Tests.Script Structure Validation.should define expected functions" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0932" asserts="0" description="0010_Prepare-HyperVProvider Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0010_Prepare-HyperVProvider Tests.Parameter Validation.should accept Config parameter" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests.Convert-CerToPem Function Tests" executed="True" result="Ignored" success="True" time="0.1073" asserts="0" description="0010_Prepare-HyperVProvider Tests.Convert-CerToPem Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0010_Prepare-HyperVProvider Tests.Convert-CerToPem Function Tests.should be defined and accessible" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0010_Prepare-HyperVProvider Tests.Convert-CerToPem Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0010_Prepare-HyperVProvider Tests.Convert-CerToPem Function Tests.should handle execution with valid parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests.Convert-PfxToPem Function Tests" executed="True" result="Ignored" success="True" time="0.1217" asserts="0" description="0010_Prepare-HyperVProvider Tests.Convert-PfxToPem Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0010_Prepare-HyperVProvider Tests.Convert-PfxToPem Function Tests.should be defined and accessible" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0010_Prepare-HyperVProvider Tests.Convert-PfxToPem Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0010_Prepare-HyperVProvider Tests.Convert-PfxToPem Function Tests.should handle execution with valid parameters" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0010_Prepare-HyperVProvider Tests.Get-HyperVProviderVersion Function Tests" executed="True" result="Ignored" success="True" time="0.1366" asserts="0" description="0010_Prepare-HyperVProvider Tests.Get-HyperVProviderVersion Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0010_Prepare-HyperVProvider Tests.Get-HyperVProviderVersion Function Tests.should be defined and accessible" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0010_Prepare-HyperVProvider Tests.Get-HyperVProviderVersion Function Tests.should support common parameters" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0010_Prepare-HyperVProvider Tests.Get-HyperVProviderVersion Function Tests.should handle execution with valid parameters" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0100_Enable-WinRM.Tests.ps1" executed="True" result="Ignored" success="True" time="0.154" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0100_Enable-WinRM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0100_Enable-WinRM Tests" executed="True" result="Ignored" success="True" time="0.0689" asserts="0" description="0100_Enable-WinRM Tests">
            <results>
              <test-suite type="TestFixture" name="0100_Enable-WinRM Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.029" asserts="0" description="0100_Enable-WinRM Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0100_Enable-WinRM Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0143" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0100_Enable-WinRM Tests.Script Structure Validation.should follow naming conventions" time="0.0051" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0100_Enable-WinRM Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0484" asserts="0" description="0100_Enable-WinRM Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0100_Enable-WinRM Tests.Parameter Validation.should accept Config parameter" time="0.0072" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0101_Enable-RemoteDesktop.Tests.ps1" executed="True" result="Failure" success="False" time="0.2718" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0101_Enable-RemoteDesktop.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0101_Enable-RemoteDesktop Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0101_Enable-RemoteDesktop Tests">
            <results>
              <test-suite type="TestFixture" name="0101_Enable-RemoteDesktop Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0101_Enable-RemoteDesktop Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0101_Enable-RemoteDesktop Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0101_Enable-RemoteDesktop Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0101_Enable-RemoteDesktop Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0101_Enable-RemoteDesktop Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0101_Enable-RemoteDesktop Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0102_Configure-Firewall.Tests.ps1" executed="True" result="Failure" success="False" time="0.3394" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0102_Configure-Firewall.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0102_Configure-Firewall Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0102_Configure-Firewall Tests">
            <results>
              <test-suite type="TestFixture" name="0102_Configure-Firewall Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0102_Configure-Firewall Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0102_Configure-Firewall Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0102_Configure-Firewall Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0102_Configure-Firewall Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0102_Configure-Firewall Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0102_Configure-Firewall Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0103_Change-ComputerName.Tests.ps1" executed="True" result="Ignored" success="True" time="0.2102" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0103_Change-ComputerName.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0103_Change-ComputerName Tests" executed="True" result="Ignored" success="True" time="0.1134" asserts="0" description="0103_Change-ComputerName Tests">
            <results>
              <test-suite type="TestFixture" name="0103_Change-ComputerName Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0504" asserts="0" description="0103_Change-ComputerName Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0103_Change-ComputerName Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0182" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0103_Change-ComputerName Tests.Script Structure Validation.should follow naming conventions" time="0.0088" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0103_Change-ComputerName Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0831" asserts="0" description="0103_Change-ComputerName Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0103_Change-ComputerName Tests.Parameter Validation.should accept Config parameter" time="0.0149" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0104_Install-CA.Tests.ps1" executed="True" result="Ignored" success="True" time="0.3021" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0104_Install-CA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0104_Install-CA Tests" executed="True" result="Ignored" success="True" time="0.2068" asserts="0" description="0104_Install-CA Tests">
            <results>
              <test-suite type="TestFixture" name="0104_Install-CA Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0482" asserts="0" description="0104_Install-CA Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0104_Install-CA Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0067" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0104_Install-CA Tests.Script Structure Validation.should follow naming conventions" time="0.0067" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0104_Install-CA Tests.Script Structure Validation.should define expected functions" time="0.0168" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0104_Install-CA Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0761" asserts="0" description="0104_Install-CA Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0104_Install-CA Tests.Parameter Validation.should accept Config parameter" time="0.0068" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0104_Install-CA Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.1358" asserts="0" description="0104_Install-CA Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0104_Install-CA Tests.Installation Tests.should validate prerequisites" time="0.0125" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0104_Install-CA Tests.Installation Tests.should handle download failures gracefully" time="0.0113" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0104_Install-CA Tests.Installation Tests.should verify installation success" time="0.0129" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0104_Install-CA Tests.Install-CA Function Tests" executed="True" result="Ignored" success="True" time="0.181" asserts="0" description="0104_Install-CA Tests.Install-CA Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0104_Install-CA Tests.Install-CA Function Tests.should be defined and accessible" time="0.0071" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0104_Install-CA Tests.Install-CA Function Tests.should support common parameters" time="0.0049" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0104_Install-CA Tests.Install-CA Function Tests.should handle execution with valid parameters" time="0.0119" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0105_Install-HyperV.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1789" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0105_Install-HyperV.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0105_Install-HyperV Tests" executed="True" result="Ignored" success="True" time="0.1181" asserts="0" description="0105_Install-HyperV Tests">
            <results>
              <test-suite type="TestFixture" name="0105_Install-HyperV Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0576" asserts="0" description="0105_Install-HyperV Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0105_Install-HyperV Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0185" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0105_Install-HyperV Tests.Script Structure Validation.should follow naming conventions" time="0.0091" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0105_Install-HyperV Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0773" asserts="0" description="0105_Install-HyperV Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0105_Install-HyperV Tests.Parameter Validation.should accept Config parameter" time="0.006" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0105_Install-HyperV Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.1088" asserts="0" description="0105_Install-HyperV Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0105_Install-HyperV Tests.Installation Tests.should validate prerequisites" time="0.009" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0105_Install-HyperV Tests.Installation Tests.should handle download failures gracefully" time="0.0069" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0105_Install-HyperV Tests.Installation Tests.should verify installation success" time="0.0049" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0106_Install-WAC.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1401" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0106_Install-WAC.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0106_Install-WAC Tests" executed="True" result="Ignored" success="True" time="0.0763" asserts="0" description="0106_Install-WAC Tests">
            <results>
              <test-suite type="TestFixture" name="0106_Install-WAC Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.03" asserts="0" description="0106_Install-WAC Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0106_Install-WAC Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0106_Install-WAC Tests.Script Structure Validation.should follow naming conventions" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0106_Install-WAC Tests.Script Structure Validation.should define expected functions" time="0.0064" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0106_Install-WAC Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0459" asserts="0" description="0106_Install-WAC Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0106_Install-WAC Tests.Parameter Validation.should accept Config parameter" time="0.0053" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0106_Install-WAC Tests.Get-WacRegistryInstallation Function Tests" executed="True" result="Ignored" success="True" time="0.0675" asserts="0" description="0106_Install-WAC Tests.Get-WacRegistryInstallation Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0106_Install-WAC Tests.Get-WacRegistryInstallation Function Tests.should be defined and accessible" time="0.0067" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0106_Install-WAC Tests.Get-WacRegistryInstallation Function Tests.should handle execution with valid parameters" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0111_Disable-TCPIP6.Tests.ps1" executed="True" result="Failure" success="False" time="0.0895" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0111_Disable-TCPIP6.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0111_Disable-TCPIP6 Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0111_Disable-TCPIP6 Tests">
            <results>
              <test-suite type="TestFixture" name="0111_Disable-TCPIP6 Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0111_Disable-TCPIP6 Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0111_Disable-TCPIP6 Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0111_Disable-TCPIP6 Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0111_Disable-TCPIP6 Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0111_Disable-TCPIP6 Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0111_Disable-TCPIP6 Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0112_Enable-PXE.Tests.ps1" executed="True" result="Failure" success="False" time="0.1566" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0112_Enable-PXE.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0112_Enable-PXE Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0112_Enable-PXE Tests">
            <results>
              <test-suite type="TestFixture" name="0112_Enable-PXE Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0112_Enable-PXE Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0112_Enable-PXE Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0112_Enable-PXE Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0112_Enable-PXE Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0112_Enable-PXE Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0112_Enable-PXE Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0113_Config-DNS.Tests.ps1" executed="True" result="Failure" success="False" time="0.1723" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0113_Config-DNS.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0113_Config-DNS Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0113_Config-DNS Tests">
            <results>
              <test-suite type="TestFixture" name="0113_Config-DNS Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0113_Config-DNS Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0113_Config-DNS Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0113_Config-DNS Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0113_Config-DNS Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0113_Config-DNS Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0113_Config-DNS Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0113_Config-DNS Tests.Configuration Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0113_Config-DNS Tests.Configuration Tests">
                <results>
                  <test-case description="should backup existing configuration" name="0113_Config-DNS Tests.Configuration Tests.should backup existing configuration" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should validate configuration changes" name="0113_Config-DNS Tests.Configuration Tests.should validate configuration changes" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle rollback on failure" name="0113_Config-DNS Tests.Configuration Tests.should handle rollback on failure" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0114_Config-TrustedHosts.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0907" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0114_Config-TrustedHosts.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0114_Config-TrustedHosts Tests" executed="True" result="Ignored" success="True" time="0.0272" asserts="0" description="0114_Config-TrustedHosts Tests">
            <results>
              <test-suite type="TestFixture" name="0114_Config-TrustedHosts Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0117" asserts="0" description="0114_Config-TrustedHosts Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0114_Config-TrustedHosts Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0114_Config-TrustedHosts Tests.Script Structure Validation.should follow naming conventions" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0114_Config-TrustedHosts Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0205" asserts="0" description="0114_Config-TrustedHosts Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0114_Config-TrustedHosts Tests.Parameter Validation.should accept Config parameter" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0200_Get-SystemInfo.Tests.ps1" executed="True" result="Ignored" success="True" time="0.2103" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0200_Get-SystemInfo.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0200_Get-SystemInfo Tests" executed="True" result="Ignored" success="True" time="0.1154" asserts="0" description="0200_Get-SystemInfo Tests">
            <results>
              <test-suite type="TestFixture" name="0200_Get-SystemInfo Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0223" asserts="0" description="0200_Get-SystemInfo Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0200_Get-SystemInfo Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0033" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0200_Get-SystemInfo Tests.Script Structure Validation.should follow naming conventions" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0200_Get-SystemInfo Tests.Script Structure Validation.should define expected functions" time="0.0031" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0200_Get-SystemInfo Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0795" asserts="0" description="0200_Get-SystemInfo Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0200_Get-SystemInfo Tests.Parameter Validation.should accept Config parameter" time="0.0478" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept AsJson parameter" name="0200_Get-SystemInfo Tests.Parameter Validation.should accept AsJson parameter" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0200_Get-SystemInfo Tests.Get-SystemInfo Function Tests" executed="True" result="Ignored" success="True" time="0.0943" asserts="0" description="0200_Get-SystemInfo Tests.Get-SystemInfo Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0200_Get-SystemInfo Tests.Get-SystemInfo Function Tests.should be defined and accessible" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0200_Get-SystemInfo Tests.Get-SystemInfo Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0200_Get-SystemInfo Tests.Get-SystemInfo Function Tests.should handle execution with valid parameters" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0201_Install-NodeCore.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1205" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0201_Install-NodeCore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0201_Install-NodeCore Tests" executed="True" result="Ignored" success="True" time="0.0568" asserts="0" description="0201_Install-NodeCore Tests">
            <results>
              <test-suite type="TestFixture" name="0201_Install-NodeCore Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0146" asserts="0" description="0201_Install-NodeCore Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0201_Install-NodeCore Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0201_Install-NodeCore Tests.Script Structure Validation.should follow naming conventions" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0201_Install-NodeCore Tests.Script Structure Validation.should define expected functions" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0201_Install-NodeCore Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0232" asserts="0" description="0201_Install-NodeCore Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0201_Install-NodeCore Tests.Parameter Validation.should accept Config parameter" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0201_Install-NodeCore Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0378" asserts="0" description="0201_Install-NodeCore Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0201_Install-NodeCore Tests.Installation Tests.should validate prerequisites" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0201_Install-NodeCore Tests.Installation Tests.should handle download failures gracefully" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0201_Install-NodeCore Tests.Installation Tests.should verify installation success" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0201_Install-NodeCore Tests.Install-NodeCore Function Tests" executed="True" result="Ignored" success="True" time="0.0514" asserts="0" description="0201_Install-NodeCore Tests.Install-NodeCore Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0201_Install-NodeCore Tests.Install-NodeCore Function Tests.should be defined and accessible" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0201_Install-NodeCore Tests.Install-NodeCore Function Tests.should support common parameters" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0201_Install-NodeCore Tests.Install-NodeCore Function Tests.should handle execution with valid parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0202_Install-NodeGlobalPackages.Tests.ps1" executed="True" result="Failure" success="False" time="0.1054" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0202_Install-NodeGlobalPackages.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests">
            <results>
              <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0202_Install-NodeGlobalPackages Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0202_Install-NodeGlobalPackages Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="0202_Install-NodeGlobalPackages Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0202_Install-NodeGlobalPackages Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests.Installation Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0202_Install-NodeGlobalPackages Tests.Installation Tests.should validate prerequisites" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle download failures gracefully" name="0202_Install-NodeGlobalPackages Tests.Installation Tests.should handle download failures gracefully" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should verify installation success" name="0202_Install-NodeGlobalPackages Tests.Installation Tests.should verify installation success" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests.Install-GlobalPackage Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests.Install-GlobalPackage Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0202_Install-NodeGlobalPackages Tests.Install-GlobalPackage Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="0202_Install-NodeGlobalPackages Tests.Install-GlobalPackage Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="0202_Install-NodeGlobalPackages Tests.Install-GlobalPackage Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0202_Install-NodeGlobalPackages Tests.Install-NodeGlobalPackages Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0202_Install-NodeGlobalPackages Tests.Install-NodeGlobalPackages Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0202_Install-NodeGlobalPackages Tests.Install-NodeGlobalPackages Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="0202_Install-NodeGlobalPackages Tests.Install-NodeGlobalPackages Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="0202_Install-NodeGlobalPackages Tests.Install-NodeGlobalPackages Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0203_Install-npm.Tests.ps1" executed="True" result="Failure" success="False" time="0.1027" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0203_Install-npm.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0203_Install-npm Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0203_Install-npm Tests">
            <results>
              <test-suite type="TestFixture" name="0203_Install-npm Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0203_Install-npm Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0203_Install-npm Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0203_Install-npm Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="0203_Install-npm Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0203_Install-npm Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0203_Install-npm Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0203_Install-npm Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0203_Install-npm Tests.Installation Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0203_Install-npm Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0203_Install-npm Tests.Installation Tests.should validate prerequisites" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle download failures gracefully" name="0203_Install-npm Tests.Installation Tests.should handle download failures gracefully" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should verify installation success" name="0203_Install-npm Tests.Installation Tests.should verify installation success" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0203_Install-npm Tests.Install-NpmDependencies Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0203_Install-npm Tests.Install-NpmDependencies Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0203_Install-npm Tests.Install-NpmDependencies Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="0203_Install-npm Tests.Install-NpmDependencies Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="0203_Install-npm Tests.Install-NpmDependencies Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0204_Install-Poetry.Tests.ps1" executed="True" result="Failure" success="False" time="0.095" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0204_Install-Poetry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0204_Install-Poetry Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0204_Install-Poetry Tests">
            <results>
              <test-suite type="TestFixture" name="0204_Install-Poetry Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0204_Install-Poetry Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0204_Install-Poetry Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0204_Install-Poetry Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="0204_Install-Poetry Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0204_Install-Poetry Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0204_Install-Poetry Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0204_Install-Poetry Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0204_Install-Poetry Tests.Installation Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0204_Install-Poetry Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0204_Install-Poetry Tests.Installation Tests.should validate prerequisites" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle download failures gracefully" name="0204_Install-Poetry Tests.Installation Tests.should handle download failures gracefully" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should verify installation success" name="0204_Install-Poetry Tests.Installation Tests.should verify installation success" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0204_Install-Poetry Tests.Install-Poetry Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0204_Install-Poetry Tests.Install-Poetry Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0204_Install-Poetry Tests.Install-Poetry Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="0204_Install-Poetry Tests.Install-Poetry Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="0204_Install-Poetry Tests.Install-Poetry Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0205_Install-Sysinternals.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0573" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0205_Install-Sysinternals.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0205_Install-Sysinternals Tests" executed="True" result="Ignored" success="True" time="0.016" asserts="0" description="0205_Install-Sysinternals Tests">
            <results>
              <test-suite type="TestFixture" name="0205_Install-Sysinternals Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.007" asserts="0" description="0205_Install-Sysinternals Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0205_Install-Sysinternals Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0018" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0205_Install-Sysinternals Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0205_Install-Sysinternals Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0122" asserts="0" description="0205_Install-Sysinternals Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0205_Install-Sysinternals Tests.Parameter Validation.should accept Config parameter" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0206_Install-Python.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1794" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0206_Install-Python.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0206_Install-Python Tests" executed="True" result="Ignored" success="True" time="0.0491" asserts="0" description="0206_Install-Python Tests">
            <results>
              <test-suite type="TestFixture" name="0206_Install-Python Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0088" asserts="0" description="0206_Install-Python Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0206_Install-Python Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0206_Install-Python Tests.Script Structure Validation.should follow naming conventions" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0206_Install-Python Tests.Script Structure Validation.should define expected functions" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0206_Install-Python Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0151" asserts="0" description="0206_Install-Python Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0206_Install-Python Tests.Parameter Validation.should accept Config parameter" time="0.0022" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0206_Install-Python Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0296" asserts="0" description="0206_Install-Python Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0206_Install-Python Tests.Installation Tests.should validate prerequisites" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0206_Install-Python Tests.Installation Tests.should handle download failures gracefully" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0206_Install-Python Tests.Installation Tests.should verify installation success" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0206_Install-Python Tests.Install-Python Function Tests" executed="True" result="Ignored" success="True" time="0.0439" asserts="0" description="0206_Install-Python Tests.Install-Python Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0206_Install-Python Tests.Install-Python Function Tests.should be defined and accessible" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0206_Install-Python Tests.Install-Python Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0206_Install-Python Tests.Install-Python Function Tests.should handle execution with valid parameters" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0207_Install-Git.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1218" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0207_Install-Git.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0207_Install-Git Tests" executed="True" result="Ignored" success="True" time="0.0497" asserts="0" description="0207_Install-Git Tests">
            <results>
              <test-suite type="TestFixture" name="0207_Install-Git Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0145" asserts="0" description="0207_Install-Git Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0207_Install-Git Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.003" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0207_Install-Git Tests.Script Structure Validation.should follow naming conventions" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0207_Install-Git Tests.Script Structure Validation.should define expected functions" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0207_Install-Git Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0229" asserts="0" description="0207_Install-Git Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0207_Install-Git Tests.Parameter Validation.should accept Config parameter" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0207_Install-Git Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0368" asserts="0" description="0207_Install-Git Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0207_Install-Git Tests.Installation Tests.should validate prerequisites" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0207_Install-Git Tests.Installation Tests.should handle download failures gracefully" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0207_Install-Git Tests.Installation Tests.should verify installation success" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0207_Install-Git Tests.Install-Git Function Tests" executed="True" result="Ignored" success="True" time="0.0456" asserts="0" description="0207_Install-Git Tests.Install-Git Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0207_Install-Git Tests.Install-Git Function Tests.should be defined and accessible" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0207_Install-Git Tests.Install-Git Function Tests.should support common parameters" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0207_Install-Git Tests.Install-Git Function Tests.should handle execution with valid parameters" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0208_Install-DockerDesktop.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0933" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0208_Install-DockerDesktop.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0208_Install-DockerDesktop Tests" executed="True" result="Ignored" success="True" time="0.04" asserts="0" description="0208_Install-DockerDesktop Tests">
            <results>
              <test-suite type="TestFixture" name="0208_Install-DockerDesktop Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0091" asserts="0" description="0208_Install-DockerDesktop Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0208_Install-DockerDesktop Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0208_Install-DockerDesktop Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0208_Install-DockerDesktop Tests.Script Structure Validation.should define expected functions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0208_Install-DockerDesktop Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0154" asserts="0" description="0208_Install-DockerDesktop Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0208_Install-DockerDesktop Tests.Parameter Validation.should accept Config parameter" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0208_Install-DockerDesktop Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0255" asserts="0" description="0208_Install-DockerDesktop Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0208_Install-DockerDesktop Tests.Installation Tests.should validate prerequisites" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0208_Install-DockerDesktop Tests.Installation Tests.should handle download failures gracefully" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0208_Install-DockerDesktop Tests.Installation Tests.should verify installation success" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0208_Install-DockerDesktop Tests.Install-DockerDesktop Function Tests" executed="True" result="Ignored" success="True" time="0.0364" asserts="0" description="0208_Install-DockerDesktop Tests.Install-DockerDesktop Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0208_Install-DockerDesktop Tests.Install-DockerDesktop Function Tests.should be defined and accessible" time="0.0022" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0208_Install-DockerDesktop Tests.Install-DockerDesktop Function Tests.should support common parameters" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0208_Install-DockerDesktop Tests.Install-DockerDesktop Function Tests.should handle execution with valid parameters" time="0.0019" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0209_Install-7Zip.Tests.ps1" executed="True" result="Ignored" success="True" time="0.099" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0209_Install-7Zip.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0209_Install-7Zip Tests" executed="True" result="Ignored" success="True" time="0.0417" asserts="0" description="0209_Install-7Zip Tests">
            <results>
              <test-suite type="TestFixture" name="0209_Install-7Zip Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0086" asserts="0" description="0209_Install-7Zip Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0209_Install-7Zip Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0209_Install-7Zip Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0209_Install-7Zip Tests.Script Structure Validation.should define expected functions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0209_Install-7Zip Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0135" asserts="0" description="0209_Install-7Zip Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0209_Install-7Zip Tests.Parameter Validation.should accept Config parameter" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0209_Install-7Zip Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0235" asserts="0" description="0209_Install-7Zip Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0209_Install-7Zip Tests.Installation Tests.should validate prerequisites" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0209_Install-7Zip Tests.Installation Tests.should handle download failures gracefully" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0209_Install-7Zip Tests.Installation Tests.should verify installation success" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0209_Install-7Zip Tests.Install-7Zip Function Tests" executed="True" result="Ignored" success="True" time="0.0367" asserts="0" description="0209_Install-7Zip Tests.Install-7Zip Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0209_Install-7Zip Tests.Install-7Zip Function Tests.should be defined and accessible" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0209_Install-7Zip Tests.Install-7Zip Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0209_Install-7Zip Tests.Install-7Zip Function Tests.should handle execution with valid parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0210_Install-VSCode.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1154" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0210_Install-VSCode.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0210_Install-VSCode Tests" executed="True" result="Ignored" success="True" time="0.0563" asserts="0" description="0210_Install-VSCode Tests">
            <results>
              <test-suite type="TestFixture" name="0210_Install-VSCode Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0141" asserts="0" description="0210_Install-VSCode Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0210_Install-VSCode Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0210_Install-VSCode Tests.Script Structure Validation.should follow naming conventions" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0210_Install-VSCode Tests.Script Structure Validation.should define expected functions" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0210_Install-VSCode Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0224" asserts="0" description="0210_Install-VSCode Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0210_Install-VSCode Tests.Parameter Validation.should accept Config parameter" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0210_Install-VSCode Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0373" asserts="0" description="0210_Install-VSCode Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0210_Install-VSCode Tests.Installation Tests.should validate prerequisites" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0210_Install-VSCode Tests.Installation Tests.should handle download failures gracefully" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0210_Install-VSCode Tests.Installation Tests.should verify installation success" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0210_Install-VSCode Tests.Install-VSCode Function Tests" executed="True" result="Ignored" success="True" time="0.0511" asserts="0" description="0210_Install-VSCode Tests.Install-VSCode Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0210_Install-VSCode Tests.Install-VSCode Function Tests.should be defined and accessible" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0210_Install-VSCode Tests.Install-VSCode Function Tests.should support common parameters" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0210_Install-VSCode Tests.Install-VSCode Function Tests.should handle execution with valid parameters" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0211_Install-VSBuildTools.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0978" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0211_Install-VSBuildTools.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0211_Install-VSBuildTools Tests" executed="True" result="Ignored" success="True" time="0.0407" asserts="0" description="0211_Install-VSBuildTools Tests">
            <results>
              <test-suite type="TestFixture" name="0211_Install-VSBuildTools Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.009" asserts="0" description="0211_Install-VSBuildTools Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0211_Install-VSBuildTools Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0211_Install-VSBuildTools Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0211_Install-VSBuildTools Tests.Script Structure Validation.should define expected functions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0211_Install-VSBuildTools Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0171" asserts="0" description="0211_Install-VSBuildTools Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0211_Install-VSBuildTools Tests.Parameter Validation.should accept Config parameter" time="0.0034" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0211_Install-VSBuildTools Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0289" asserts="0" description="0211_Install-VSBuildTools Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0211_Install-VSBuildTools Tests.Installation Tests.should validate prerequisites" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0211_Install-VSBuildTools Tests.Installation Tests.should handle download failures gracefully" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0211_Install-VSBuildTools Tests.Installation Tests.should verify installation success" time="0.0019" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0211_Install-VSBuildTools Tests.Install-VSBuildTools Function Tests" executed="True" result="Ignored" success="True" time="0.0374" asserts="0" description="0211_Install-VSBuildTools Tests.Install-VSBuildTools Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0211_Install-VSBuildTools Tests.Install-VSBuildTools Function Tests.should be defined and accessible" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0211_Install-VSBuildTools Tests.Install-VSBuildTools Function Tests.should support common parameters" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0211_Install-VSBuildTools Tests.Install-VSBuildTools Function Tests.should handle execution with valid parameters" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0212_Install-AzureCLI.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0946" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0212_Install-AzureCLI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0212_Install-AzureCLI Tests" executed="True" result="Ignored" success="True" time="0.0354" asserts="0" description="0212_Install-AzureCLI Tests">
            <results>
              <test-suite type="TestFixture" name="0212_Install-AzureCLI Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0085" asserts="0" description="0212_Install-AzureCLI Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0212_Install-AzureCLI Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0212_Install-AzureCLI Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0212_Install-AzureCLI Tests.Script Structure Validation.should define expected functions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0212_Install-AzureCLI Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0134" asserts="0" description="0212_Install-AzureCLI Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0212_Install-AzureCLI Tests.Parameter Validation.should accept Config parameter" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0212_Install-AzureCLI Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0216" asserts="0" description="0212_Install-AzureCLI Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0212_Install-AzureCLI Tests.Installation Tests.should validate prerequisites" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0212_Install-AzureCLI Tests.Installation Tests.should handle download failures gracefully" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0212_Install-AzureCLI Tests.Installation Tests.should verify installation success" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0212_Install-AzureCLI Tests.Install-AzureCLI Function Tests" executed="True" result="Ignored" success="True" time="0.0308" asserts="0" description="0212_Install-AzureCLI Tests.Install-AzureCLI Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0212_Install-AzureCLI Tests.Install-AzureCLI Function Tests.should be defined and accessible" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0212_Install-AzureCLI Tests.Install-AzureCLI Function Tests.should support common parameters" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0212_Install-AzureCLI Tests.Install-AzureCLI Function Tests.should handle execution with valid parameters" time="0.0018" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0213_Install-AWSCLI.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1081" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0213_Install-AWSCLI.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0213_Install-AWSCLI Tests" executed="True" result="Ignored" success="True" time="0.0548" asserts="0" description="0213_Install-AWSCLI Tests">
            <results>
              <test-suite type="TestFixture" name="0213_Install-AWSCLI Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0138" asserts="0" description="0213_Install-AWSCLI Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0213_Install-AWSCLI Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0213_Install-AWSCLI Tests.Script Structure Validation.should follow naming conventions" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0213_Install-AWSCLI Tests.Script Structure Validation.should define expected functions" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0213_Install-AWSCLI Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0229" asserts="0" description="0213_Install-AWSCLI Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0213_Install-AWSCLI Tests.Parameter Validation.should accept Config parameter" time="0.0029" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0213_Install-AWSCLI Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0361" asserts="0" description="0213_Install-AWSCLI Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0213_Install-AWSCLI Tests.Installation Tests.should validate prerequisites" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0213_Install-AWSCLI Tests.Installation Tests.should handle download failures gracefully" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0213_Install-AWSCLI Tests.Installation Tests.should verify installation success" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0213_Install-AWSCLI Tests.Install-AWSCLI Function Tests" executed="True" result="Ignored" success="True" time="0.0498" asserts="0" description="0213_Install-AWSCLI Tests.Install-AWSCLI Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0213_Install-AWSCLI Tests.Install-AWSCLI Function Tests.should be defined and accessible" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0213_Install-AWSCLI Tests.Install-AWSCLI Function Tests.should support common parameters" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0213_Install-AWSCLI Tests.Install-AWSCLI Function Tests.should handle execution with valid parameters" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0214_Install-Packer.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1267" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0214_Install-Packer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0214_Install-Packer Tests" executed="True" result="Ignored" success="True" time="0.0649" asserts="0" description="0214_Install-Packer Tests">
            <results>
              <test-suite type="TestFixture" name="0214_Install-Packer Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.016" asserts="0" description="0214_Install-Packer Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0214_Install-Packer Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0038" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0214_Install-Packer Tests.Script Structure Validation.should follow naming conventions" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0214_Install-Packer Tests.Script Structure Validation.should define expected functions" time="0.0024" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0214_Install-Packer Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0234" asserts="0" description="0214_Install-Packer Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0214_Install-Packer Tests.Parameter Validation.should accept Config parameter" time="0.0024" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0214_Install-Packer Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0452" asserts="0" description="0214_Install-Packer Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0214_Install-Packer Tests.Installation Tests.should validate prerequisites" time="0.0051" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0214_Install-Packer Tests.Installation Tests.should handle download failures gracefully" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0214_Install-Packer Tests.Installation Tests.should verify installation success" time="0.0067" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0214_Install-Packer Tests.Install-Packer Function Tests" executed="True" result="Ignored" success="True" time="0.0599" asserts="0" description="0214_Install-Packer Tests.Install-Packer Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0214_Install-Packer Tests.Install-Packer Function Tests.should be defined and accessible" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0214_Install-Packer Tests.Install-Packer Function Tests.should support common parameters" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0214_Install-Packer Tests.Install-Packer Function Tests.should handle execution with valid parameters" time="0.0026" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0215_Install-Chocolatey.Tests.ps1" executed="True" result="Ignored" success="True" time="0.1199" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0215_Install-Chocolatey.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0215_Install-Chocolatey Tests" executed="True" result="Ignored" success="True" time="0.0461" asserts="0" description="0215_Install-Chocolatey Tests">
            <results>
              <test-suite type="TestFixture" name="0215_Install-Chocolatey Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0124" asserts="0" description="0215_Install-Chocolatey Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0215_Install-Chocolatey Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="0215_Install-Chocolatey Tests.Script Structure Validation.should follow naming conventions" time="0.0021" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="0215_Install-Chocolatey Tests.Script Structure Validation.should define expected functions" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0215_Install-Chocolatey Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0192" asserts="0" description="0215_Install-Chocolatey Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0215_Install-Chocolatey Tests.Parameter Validation.should accept Config parameter" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0215_Install-Chocolatey Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0336" asserts="0" description="0215_Install-Chocolatey Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="0215_Install-Chocolatey Tests.Installation Tests.should validate prerequisites" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="0215_Install-Chocolatey Tests.Installation Tests.should handle download failures gracefully" time="0.0038" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="0215_Install-Chocolatey Tests.Installation Tests.should verify installation success" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0215_Install-Chocolatey Tests.Install-Chocolatey Function Tests" executed="True" result="Ignored" success="True" time="0.042" asserts="0" description="0215_Install-Chocolatey Tests.Install-Chocolatey Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0215_Install-Chocolatey Tests.Install-Chocolatey Function Tests.should be defined and accessible" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="0215_Install-Chocolatey Tests.Install-Chocolatey Function Tests.should support common parameters" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="0215_Install-Chocolatey Tests.Install-Chocolatey Function Tests.should handle execution with valid parameters" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/0216_Set-LabProfile.Tests.ps1" executed="True" result="Failure" success="False" time="0.0766" asserts="0" description="/workspaces/opentofu-lab-automation/tests/0216_Set-LabProfile.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0216_Set-LabProfile Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0216_Set-LabProfile Tests">
            <results>
              <test-suite type="TestFixture" name="0216_Set-LabProfile Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0216_Set-LabProfile Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="0216_Set-LabProfile Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="0216_Set-LabProfile Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="0216_Set-LabProfile Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0216_Set-LabProfile Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="0216_Set-LabProfile Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="0216_Set-LabProfile Tests.Parameter Validation.should accept Config parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="0216_Set-LabProfile Tests.Set-LabProfile Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="0216_Set-LabProfile Tests.Set-LabProfile Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="0216_Set-LabProfile Tests.Set-LabProfile Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="0216_Set-LabProfile Tests.Set-LabProfile Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="0216_Set-LabProfile Tests.Set-LabProfile Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/9999_Reset-Machine.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0463" asserts="0" description="/workspaces/opentofu-lab-automation/tests/9999_Reset-Machine.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="9999_Reset-Machine Tests" executed="True" result="Ignored" success="True" time="0.0158" asserts="0" description="9999_Reset-Machine Tests">
            <results>
              <test-suite type="TestFixture" name="9999_Reset-Machine Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0069" asserts="0" description="9999_Reset-Machine Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="9999_Reset-Machine Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0017" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="9999_Reset-Machine Tests.Script Structure Validation.should follow naming conventions" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="9999_Reset-Machine Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0118" asserts="0" description="9999_Reset-Machine Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Config parameter" name="9999_Reset-Machine Tests.Parameter Validation.should accept Config parameter" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Cleanup-Files.Tests.ps1" executed="True" result="Failure" success="False" time="0.8801" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Cleanup-Files.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Cleanup-Files script" executed="True" result="Failure" success="False" time="0.8407" asserts="0" description="Cleanup-Files script">
            <results>
              <test-case description="uses ErrorAction Stop for Remove-Item calls" name="Cleanup-Files script.uses ErrorAction Stop for Remove-Item calls" time="0.1243" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="removes repo and infra directories when they exist" name="Cleanup-Files script.removes repo and infra directories when they exist" time="0.0587" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="handles missing directories gracefully" name="Cleanup-Files script.handles missing directories gracefully" time="0.049" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="runs without a global log file" name="Cleanup-Files script.runs without a global log file" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="completes when LogFilePath is undefined" name="Cleanup-Files script.completes when LogFilePath is undefined" time="0.037" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="completes when the repo directory is removed" name="Cleanup-Files script.completes when the repo directory is removed" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws when repo removal fails" name="Cleanup-Files script.throws when repo removal fails" time="0.407" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected an exception with message like '*Cleanup failed:*' to be thrown, but no exception was thrown.</message>
                  <stack-trace>at { &amp; $script:scriptPath -Config $config } | Should -Throw '*Cleanup failed:*', /workspaces/opentofu-lab-automation/tests/Cleanup-Files.Tests.ps1:163
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Cleanup-Files.Tests.ps1:163</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Config-DNS.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0379" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Config-DNS.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0113_Config-DNS" executed="True" result="Ignored" success="True" time="0.0058" asserts="0" description="0113_Config-DNS">
            <results>
              <test-case description="calls Set-DnsClientServerAddress with value from config" name="0113_Config-DNS.calls Set-DnsClientServerAddress with value from config" time="0.0024" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Config-TrustedHosts.Tests.ps1" executed="True" result="Success" success="True" time="0.2491" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Config-TrustedHosts.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0114_Config-TrustedHosts" executed="True" result="Success" success="True" time="0.2256" asserts="0" description="0114_Config-TrustedHosts">
            <results>
              <test-case description="calls Start-Process with winrm arguments using config value" name="0114_Config-TrustedHosts.calls Start-Process with winrm arguments using config value" time="0.2194" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Configure-Firewall.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0323" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Configure-Firewall.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0102_Configure-Firewall" executed="True" result="Ignored" success="True" time="0.0096" asserts="0" description="0102_Configure-Firewall">
            <results>
              <test-case description="creates firewall rules for each port when ports are specified" name="0102_Configure-Firewall.creates firewall rules for each port when ports are specified" time="0.0028" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="skips when no FirewallPorts are provided" name="0102_Configure-Firewall.skips when no FirewallPorts are provided" time="0.0025" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Customize-ISO.Tests.ps1" executed="True" result="Failure" success="False" time="0.1979" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Customize-ISO.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Customize-ISO.ps1" executed="True" result="Failure" success="False" time="0.1763" asserts="0" description="Customize-ISO.ps1">
            <results>
              <test-case description="parses without errors" name="Customize-ISO.ps1.parses without errors" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="honours parameters and logs each step" name="Customize-ISO.ps1.honours parameters and logs each step" time="0.0576" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'New-CimInstance' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Customize-ISO.Tests.ps1:34</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/CustomLint.Tests.ps1" executed="True" result="Failure" success="False" time="0.1584" asserts="0" description="/workspaces/opentofu-lab-automation/tests/CustomLint.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="CustomLint.ps1" executed="True" result="Failure" success="False" time="0.1381" asserts="0" description="CustomLint.ps1">
            <results>
              <test-case description="parses without errors" name="CustomLint.ps1.parses without errors" time="0.02" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected 0, but got 1.</message>
                  <stack-trace>at ($errs ? $errs.Count : 0) | Should -Be 0, /workspaces/opentofu-lab-automation/tests/CustomLint.Tests.ps1:11
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/CustomLint.Tests.ps1:11</stack-trace>
                </failure>
              </test-case>
              <test-case description="returns exit code 1 when analyzer reports errors" name="CustomLint.ps1.returns exit code 1 when analyzer reports errors" time="0.0376" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Invoke-ScriptAnalyzer</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="fails when Invoke-WebRequest mock lacks ParameterFilter" name="CustomLint.ps1.fails when Invoke-WebRequest mock lacks ParameterFilter" time="0.0358" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Invoke-ScriptAnalyzer</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="returns exit code 0 when no errors" name="CustomLint.ps1.returns exit code 0 when no errors" time="0.0367" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Invoke-ScriptAnalyzer</message>
                  <stack-trace />
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Download-Archive.Tests.ps1" executed="True" result="Failure" success="False" time="0.2431" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Download-Archive.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-ArchiveDownload" executed="True" result="Failure" success="False" time="0.2163" asserts="0" description="Invoke-ArchiveDownload">
            <results>
              <test-case description="uses gh CLI when -UseGh" name="Invoke-ArchiveDownload.uses gh CLI when -UseGh" time="0.0554" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Invoke-ArchiveDownload' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Download-Archive.Tests.ps1:14</stack-trace>
                </failure>
              </test-case>
              <test-case description="uses Invoke-WebRequest when -UseGh not specified" name="Invoke-ArchiveDownload.uses Invoke-WebRequest when -UseGh not specified" time="0.0527" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Invoke-ArchiveDownload' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Download-Archive.Tests.ps1:20</stack-trace>
                </failure>
              </test-case>
              <test-case description="throws if gh fails and -Required is set" name="Invoke-ArchiveDownload.throws if gh fails and -Required is set" time="0.0535" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws if Invoke-WebRequest fails and -Required is set" name="Invoke-ArchiveDownload.throws if Invoke-WebRequest fails and -Required is set" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Enable-PXE.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0291" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Enable-PXE.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0112_Enable-PXE" executed="True" result="Ignored" success="True" time="0.0049" asserts="0" description="0112_Enable-PXE">
            <results>
              <test-case description="logs firewall rules when ConfigPXE is true" name="0112_Enable-PXE.logs firewall rules when ConfigPXE is true" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Enable-RemoteDesktop.Tests.ps1" executed="True" result="Ignored" success="True" time="0.037" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Enable-RemoteDesktop.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0101_Enable-RemoteDesktop" executed="True" result="Ignored" success="True" time="0.0093" asserts="0" description="0101_Enable-RemoteDesktop">
            <results>
              <test-case description="enables RDP when allowed and currently disabled" name="0101_Enable-RemoteDesktop.enables RDP when allowed and currently disabled" time="0.0023" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="skips registry change when already enabled" name="0101_Enable-RemoteDesktop.skips registry change when already enabled" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="does nothing when AllowRemoteDesktop is false" name="0101_Enable-RemoteDesktop.does nothing when AllowRemoteDesktop is false" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Enable-WinRM.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0414" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Enable-WinRM.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0100_Enable-WinRM" executed="True" result="Ignored" success="True" time="0.0099" asserts="0" description="0100_Enable-WinRM">
            <results>
              <test-case description="enables WinRM when service is not running" name="0100_Enable-WinRM.enables WinRM when service is not running" time="0.0021" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="skips enabling when WinRM already running" name="0100_Enable-WinRM.skips enabling when WinRM already running" time="0.0027" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/EscapePathArgument.Tests.ps1" executed="True" result="Success" success="True" time="0.0772" asserts="0" description="/workspaces/opentofu-lab-automation/tests/EscapePathArgument.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="escapePathArgument" executed="True" result="Success" success="True" time="0.0498" asserts="0" description="escapePathArgument">
            <results>
              <test-case description="wraps path in quotes" name="escapePathArgument.wraps path in quotes" time="0.0062" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="accepts pipeline input" name="escapePathArgument.accepts pipeline input" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws when path contains quotes" name="escapePathArgument.throws when path contains quotes" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1" executed="True" result="Failure" success="False" time="0.6509" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Expand-All" executed="True" result="Failure" success="False" time="0.6213" asserts="0" description="Expand-All">
            <results>
              <test-case description="expands a specific ZIP file when provided" name="Expand-All.expands a specific ZIP file when provided" time="0.1268" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Expand-All' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1:25</stack-trace>
                </failure>
              </test-case>
              <test-case description="expands all ZIP files recursively when no path is given" name="Expand-All.expands all ZIP files recursively when no path is given" time="0.1328" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Expand-All' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1:54</stack-trace>
                </failure>
              </test-case>
              <test-case description="logs message when specified ZIP file does not exist" name="Expand-All.logs message when specified ZIP file does not exist" time="0.1818" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Expand-All' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1:71</stack-trace>
                </failure>
              </test-case>
              <test-case description="cancels when user declines expansion" name="Expand-All.cancels when user declines expansion" time="0.165" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Expand-All' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Expand-All.Tests.ps1:89</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1" executed="True" result="Failure" success="False" time="0.4734" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Format-Config" executed="True" result="Failure" success="False" time="0.4406" asserts="0" description="Format-Config">
            <results>
              <test-case description="formats config as indented JSON" name="Format-Config.formats config as indented JSON" time="0.0641" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:9</stack-trace>
                </failure>
              </test-case>
              <test-case description="accepts pipeline input" name="Format-Config.accepts pipeline input" time="0.0545" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:16</stack-trace>
                </failure>
              </test-case>
              <test-case description="accepts pipeline input by property name" name="Format-Config.accepts pipeline input by property name" time="0.0525" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:23</stack-trace>
                </failure>
              </test-case>
              <test-case description="throws when no Config is provided" name="Format-Config.throws when no Config is provided" time="0.0901" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected the value to have type [System.ArgumentException] or any of its subtypes, but got System.Management.Automation.CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) with type [System.Management.Automation.CommandNotFoundException].</message>
                  <stack-trace>at $_.Exception | Should -BeOfType [System.ArgumentException], /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:32
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:32</stack-trace>
                </failure>
              </test-case>
              <test-case description="throws when pipeline is empty" name="Format-Config.throws when pipeline is empty" time="0.0381" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected the value to have type [System.ArgumentException] or any of its subtypes, but got System.Management.Automation.CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) with type [System.Management.Automation.CommandNotFoundException].</message>
                  <stack-trace>at $_.Exception | Should -BeOfType [System.ArgumentException], /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:41
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:41</stack-trace>
                </failure>
              </test-case>
              <test-case description="throws when Config is null" name="Format-Config.throws when Config is null" time="0.0406" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected the value to have type [System.ArgumentException] or any of its subtypes, but got System.Management.Automation.CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) with type [System.Management.Automation.CommandNotFoundException].</message>
                  <stack-trace>at $_.Exception | Should -BeOfType [System.ArgumentException], /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:50
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:50</stack-trace>
                </failure>
              </test-case>
              <test-case description="is a terminating error when Config is null" name="Format-Config.is a terminating error when Config is null" time="0.0385" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected the value to have type [System.ArgumentException] or any of its subtypes, but got System.Management.Automation.CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) with type [System.Management.Automation.CommandNotFoundException].</message>
                  <stack-trace>at $_.Exception | Should -BeOfType [System.ArgumentException], /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:59
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:59</stack-trace>
                </failure>
              </test-case>
              <test-case description="is a terminating error when piped null" name="Format-Config.is a terminating error when piped null" time="0.053" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected the value to have type [System.ArgumentException] or any of its subtypes, but got System.Management.Automation.CommandNotFoundException: The term 'Format-Config' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)
   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)
   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame) with type [System.Management.Automation.CommandNotFoundException].</message>
                  <stack-trace>at $_.Exception | Should -BeOfType [System.ArgumentException], /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:68
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Format-Config.Tests.ps1:68</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Get-HyperVProviderVersion.Tests.ps1" executed="True" result="Success" success="True" time="0.8368" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Get-HyperVProviderVersion.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-HyperVProviderVersion" executed="True" result="Success" success="True" time="0.7973" asserts="0" description="Get-HyperVProviderVersion">
            <results>
              <test-case description="uses version from config" name="Get-HyperVProviderVersion.uses version from config" time="0.473" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="falls back to default when not specified" name="Get-HyperVProviderVersion.falls back to default when not specified" time="0.3137" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Get-LabConfig.Tests.ps1" executed="True" result="Success" success="True" time="0.1984" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Get-LabConfig.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-LabConfig" executed="True" result="Success" success="True" time="0.1627" asserts="0" description="Get-LabConfig">
            <results>
              <test-case description="returns PSCustomObject for valid JSON and populates Directories" name="Get-LabConfig.returns PSCustomObject for valid JSON and populates Directories" time="0.0976" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="uses custom Directories from JSON file" name="Get-LabConfig.uses custom Directories from JSON file" time="0.0194" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws when file does not exist" name="Get-LabConfig.throws when file does not exist" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws on invalid JSON" name="Get-LabConfig.throws on invalid JSON" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="parses valid YAML" name="Get-LabConfig.parses valid YAML" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Get-Platform.Tests.ps1" executed="True" result="Success" success="True" time="0.0307" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Get-Platform.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-Platform" executed="True" result="Success" success="True" time="0.0103" asserts="0" description="Get-Platform">
            <results>
              <test-case description="returns the correct platform for the current OS" name="Get-Platform.returns the correct platform for the current OS" time="0.0042" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Get-SystemInfo.Tests.ps1" executed="True" result="Success" success="True" time="3.115" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Get-SystemInfo.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0200_Get-SystemInfo" executed="True" result="Success" success="True" time="0.2569" asserts="0" description="0200_Get-SystemInfo">
            <results>
              <test-case description="runs without throwing and returns expected keys" name="0200_Get-SystemInfo.runs without throwing and returns expected keys" time="0.1282" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="returns exit code 1 for unsupported platform" name="0200_Get-SystemInfo.returns exit code 1 for unsupported platform" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="runner.ps1 executing 0200_Get-SystemInfo" executed="True" result="Success" success="True" time="3.0926" asserts="0" description="runner.ps1 executing 0200_Get-SystemInfo">
            <results>
              <test-case description="outputs system info when run via runner" name="runner.ps1 executing 0200_Get-SystemInfo.outputs system info when run via runner" time="2.831" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Hypervisor.Tests.ps1" executed="True" result="Success" success="True" time="0.0472" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Hypervisor.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Hypervisor module" executed="True" result="Success" success="True" time="0.0198" asserts="0" description="Hypervisor module">
            <results>
              <test-case description="Get-HVFacts returns provider information" name="Hypervisor module.Get-HVFacts returns provider information" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Enable-Provider returns confirmation string" name="Hypervisor module.Enable-Provider returns confirmation string" time="0.0028" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="Deploy-VM returns deployment message" name="Hypervisor module.Deploy-VM returns deployment message" time="0.0031" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1" executed="True" result="Failure" success="False" time="0.7131" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Initialize-OpenTofu script" executed="True" result="Failure" success="False" time="0.604" asserts="0" description="Initialize-OpenTofu script">
            <results>
              <test-case description="clones repo when InfraRepoUrl is provided" name="Initialize-OpenTofu script.clones repo when InfraRepoUrl is provided" time="0.1183" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:39</stack-trace>
                </failure>
              </test-case>
              <test-case description="pulls updates when repo already exists" name="Initialize-OpenTofu script.pulls updates when repo already exists" time="0.0895" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:69</stack-trace>
                </failure>
              </test-case>
              <test-case description="runs tofu init in InfraRepoPath" name="Initialize-OpenTofu script.runs tofu init in InfraRepoPath" time="0.0801" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:101</stack-trace>
                </failure>
              </test-case>
              <test-case description="installs OpenTofu when tofu command is missing" name="Initialize-OpenTofu script.installs OpenTofu when tofu command is missing" time="0.0806" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:137</stack-trace>
                </failure>
              </test-case>
              <test-case description="throws when installation does not make tofu available" name="Initialize-OpenTofu script.throws when installation does not make tofu available" time="0.0953" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected an exception with message like '*Tofu still not found after installation*' to be thrown, but the message was 'The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.'. from /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2 char:1
    + Param([object]$Config)
    + ~~~~~</message>
                  <stack-trace>at { &amp; $script:ScriptPath -Config $config } | Should -Throw '*Tofu still not found after installation*', /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:168
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:168</stack-trace>
                </failure>
              </test-case>
              <test-case description="errors when Install-OpenTofu script is missing" name="Initialize-OpenTofu script.errors when Install-OpenTofu script is missing" time="0.0921" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected an exception with message like '*installer*' to be thrown, but the message was 'The term 'Param' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.'. from /workspaces/opentofu-lab-automation/pwsh/runner_scripts/0009_Initialize-OpenTofu.ps1:2 char:1
    + Param([object]$Config)
    + ~~~~~</message>
                  <stack-trace>at Should -Throw '*installer*', /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:197
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Initialize-OpenTofu.Tests.ps1:196</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-CA.Tests.ps1" executed="True" result="Ignored" success="True" time="0.032" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-CA.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Install-CA" executed="True" result="Ignored" success="True" time="0.008" asserts="0" description="Install-CA">
            <results>
              <test-case description="invokes CA installation when InstallCA is true" name="Install-CA.invokes CA installation when InstallCA is true" time="0.0014" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="honours -WhatIf for CA installation" name="Install-CA.honours -WhatIf for CA installation" time="0.0015" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="skips CA installation when InstallCA is false" name="Install-CA.skips CA installation when InstallCA is false" time="0.0015" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-Go.Tests.ps1" executed="True" result="Success" success="True" time="0.5059" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-Go.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0007_Install-Go" executed="True" result="Success" success="True" time="0.4737" asserts="0" description="0007_Install-Go">
            <results>
              <test-case description="installs Go when enabled" name="0007_Install-Go.installs Go when enabled" time="0.0963" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="skips when InstallGo is false" name="0007_Install-Go.skips when InstallGo is false" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="does nothing when Go is already installed" name="0007_Install-Go.does nothing when Go is already installed" time="0.1449" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-npm.Tests.ps1" executed="True" result="Success" success="True" time="0.4289" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-npm.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0203_Install-npm" executed="True" result="Success" success="True" time="0.4018" asserts="0" description="0203_Install-npm">
            <results>
              <test-case description="runs npm install in configured NpmPath" name="0203_Install-npm.runs npm install in configured NpmPath" time="0.1242" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="succeeds when NpmPath exists" name="0203_Install-npm.succeeds when NpmPath exists" time="0.0841" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="errors when NpmPath is missing and CreateNpmPath is false" name="0203_Install-npm.errors when NpmPath is missing and CreateNpmPath is false" time="0.0594" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="errors when NpmPath is empty string" name="0203_Install-npm.errors when NpmPath is empty string" time="0.063" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="creates NpmPath when CreateNpmPath is true" name="0203_Install-npm.creates NpmPath when CreateNpmPath is true" time="0.0662" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-Poetry.Tests.ps1" executed="True" result="Success" success="True" time="0.3775" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-Poetry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0204_Install-Poetry" executed="True" result="Success" success="True" time="0.3558" asserts="0" description="0204_Install-Poetry">
            <results>
              <test-case description="invokes installer when enabled" name="0204_Install-Poetry.invokes installer when enabled" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="skips when InstallPoetry is false" name="0204_Install-Poetry.skips when InstallPoetry is false" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="throws when python is missing" name="0204_Install-Poetry.throws when python is missing" time="0.2154" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-Sysinternals.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0378" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-Sysinternals.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0205_Install-Sysinternals" executed="True" result="Ignored" success="True" time="0.0073" asserts="0" description="0205_Install-Sysinternals">
            <results>
              <test-case description="downloads and extracts when enabled" name="0205_Install-Sysinternals.downloads and extracts when enabled" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="skips when InstallSysinternals is false" name="0205_Install-Sysinternals.skips when InstallSysinternals is false" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Install-ValidationTools.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0308" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Install-ValidationTools.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="0006_Install-ValidationTools" executed="True" result="Ignored" success="True" time="0.0073" asserts="0" description="0006_Install-ValidationTools">
            <results>
              <test-case description="downloads cosign when InstallCosign is true" name="0006_Install-ValidationTools.downloads cosign when InstallCosign is true" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="checks for gpg when InstallGpg is true" name="0006_Install-ValidationTools.checks for gpg when InstallGpg is true" time="0.001" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="logs a message when no option specified" name="0006_Install-ValidationTools.logs a message when no option specified" time="0.001" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Invoke-LabDownload.Tests.ps1" executed="True" result="Failure" success="False" time="0.0494" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Invoke-LabDownload.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-LabDownload" executed="True" result="Failure" success="False" time="0.0193" asserts="0" description="Invoke-LabDownload">
            <results>
              <test-case description="downloads and executes action with cleanup" name="Invoke-LabDownload.downloads and executes action with cleanup" time="0.0138" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>RuntimeException: No modules named 'LabRunner' are currently loaded.</message>
                  <stack-trace />
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/InvokeOpenTofuInstaller.Tests.ps1" executed="True" result="Failure" success="False" time="0.1328" asserts="0" description="/workspaces/opentofu-lab-automation/tests/InvokeOpenTofuInstaller.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="InvokeOpenTofuInstaller Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="InvokeOpenTofuInstaller Tests">
            <results>
              <test-suite type="TestFixture" name="InvokeOpenTofuInstaller Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="InvokeOpenTofuInstaller Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="InvokeOpenTofuInstaller Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="InvokeOpenTofuInstaller Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="InvokeOpenTofuInstaller Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="InvokeOpenTofuInstaller Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="InvokeOpenTofuInstaller Tests.Parameter Validation">
                <results>
                  <test-case description="should accept CosignPath parameter" name="InvokeOpenTofuInstaller Tests.Parameter Validation.should accept CosignPath parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should accept OpenTofuVersion parameter" name="InvokeOpenTofuInstaller Tests.Parameter Validation.should accept OpenTofuVersion parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="InvokeOpenTofuInstaller Tests.Invoke-OpenTofuInstaller Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="InvokeOpenTofuInstaller Tests.Invoke-OpenTofuInstaller Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="InvokeOpenTofuInstaller Tests.Invoke-OpenTofuInstaller Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="InvokeOpenTofuInstaller Tests.Invoke-OpenTofuInstaller Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Kicker-Bootstrap.Tests.ps1" executed="True" result="Failure" success="False" time="0.1306" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Kicker-Bootstrap.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="kicker-bootstrap configuration" executed="True" result="Success" success="True" time="0.019" asserts="0" description="kicker-bootstrap configuration">
            <results>
              <test-case description="config files specify correct RunnerScriptName path" name="kicker-bootstrap configuration.config files specify correct RunnerScriptName path" time="0.015" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="kicker-bootstrap utilities" executed="True" result="Success" success="True" time="0.0476" asserts="0" description="kicker-bootstrap utilities">
            <results>
              <test-case description="defines Write-CustomLog fallback" name="kicker-bootstrap utilities.defines Write-CustomLog fallback" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="defines Read-LoggedInput fallback" name="kicker-bootstrap utilities.defines Read-LoggedInput fallback" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="invokes runner and propagates exit code using PassThru" name="kicker-bootstrap utilities.invokes runner and propagates exit code using PassThru" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="detects remote config URLs using -match" name="kicker-bootstrap utilities.detects remote config URLs using -match" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="adds repo path to git safe.directory" name="kicker-bootstrap utilities.adds repo path to git safe.directory" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="defines Update-RepoPreserveConfig function" name="kicker-bootstrap utilities.defines Update-RepoPreserveConfig function" time="0.0034" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="prompts when multiple config files exist" name="kicker-bootstrap utilities.prompts when multiple config files exist" time="0.0038" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="stashes config changes before pulling" name="kicker-bootstrap utilities.stashes config changes before pulling" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="defines baseUrl for raw GitHub downloads" name="kicker-bootstrap utilities.defines baseUrl for raw GitHub downloads" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="kicker-bootstrap runner script path resolution" executed="True" result="Success" success="True" time="0.0545" asserts="0" description="kicker-bootstrap runner script path resolution">
            <results>
              <test-case description="resolves and finds the runner script as the bootstrap script would" name="kicker-bootstrap runner script path resolution.resolves and finds the runner script as the bootstrap script would" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="kicker-bootstrap syntax validation" executed="True" result="Failure" success="False" time="0.067" asserts="0" description="kicker-bootstrap syntax validation">
            <results>
              <test-case description="does not have problematic variable interpolation patterns" name="kicker-bootstrap syntax validation.does not have problematic variable interpolation patterns" time="0.0105" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected regular expression '"\s*[^"]*\$\w+:[^"]*"' to not match '&lt;# 
.SYNOPSIS
  Kicker script for a fresh Windows Server Core setup with robust error handling.
  1) Loads configs/config_files/default-config.json by default (override with -ConfigFile).
  2) Checks if command-line Git is installed and in PATH.
     - Installs a minimal version if missing.
     - Updates PATH if installed but not found in PATH.
  3) Checks if GitHub CLI is installed and in PATH.
     - Installs GitHub CLI if missing.
     - Updates PATH if installed but not found in PATH.
     - Prompts for authentication if not already authenticated.
  4) Clones a repository from config.json -&gt; RepoUrl to config.json -&gt; LocalPath (or a default path).
  5) Invokes runner.ps1 from that repo.
#&gt;
param(
    [string]$ConfigFile,
    [switch]$Quiet,
    [ValidateSet('silent','normal','detailed')]
    [string]$Verbosity = 'normal'
)
function Get-CrossPlatformTempPath {
    &lt;#
    .SYNOPSIS
    Returns the appropriate temporary directory path for the current platform.
    
    .DESCRIPTION
    Provides a cross-platform way to get the temporary directory, handling cases where
    $env:TEMP might not be set (e.g., on Linux/macOS).
    #&gt;
    if ($env:TEMP) { 
        return $env:TEMP 
    } else { 
        return [System.IO.Path]::GetTempPath() 
    }
}
if ($Quiet.IsPresent) { $Verbosity = 'silent' }
$script:VerbosityLevels = @{ silent = 0; normal = 1; detailed = 2 }
$script:ConsoleLevel    = $script:VerbosityLevels[$Verbosity]
$targetBranch = 'main'
$baseUrl = 'https://raw.githubusercontent.com/wizzense/opentofu-lab-automation/refs/heads/'
$defaultConfig = "${baseUrl}${targetBranch}/configs/config_files/default-config.json"
# example: https://raw.githubusercontent.com/wizzense/tofu-base-lab/refs/heads/main/configs/bootstrap-config.json
$prompt = "`n&lt;press any key to continue&gt;`n"
function Write-Continue($prompt) {
  [Console]::Write($prompt + '  ')
  Read-LoggedInput -Prompt $prompt | Out-Null
}
$ErrorActionPreference = 'Stop'  # So any error throws an exception
$ProgressPreference = 'SilentlyContinue'
# Resolve script root even when $PSScriptRoot is not populated (e.g. -Command)
$scriptRoot = if ($PSScriptRoot) { $PSScriptRoot } else { Split-Path -Parent $MyInvocation.MyCommand.Path }
$isWindowsOS = [System.Environment]::OSVersion.Platform -eq 'Win32NT'
# Ensure the logger utility is available even when this script is executed
# standalone. If the logger script is missing, download it from the repository.
$loggerDir  = Join-Path (Join-Path $scriptRoot 'lab_utils') 'LabRunner'
$loggerPath = Join-Path $loggerDir 'Logger.ps1'
if (-not (Test-Path $loggerPath)) {
    if (-not (Test-Path $loggerDir)) {
        New-Item -ItemType Directory -Path $loggerDir -Force | Out-Null
    }
    $loggerUrl = "${baseUrl}${targetBranch}/pwsh/lab_utils/LabRunner/Logger.ps1"
    Invoke-WebRequest -Uri $loggerUrl -OutFile $loggerPath
}
try {
    . $loggerPath
} catch {
    Write-Error "Failed to load logger script: $_"
    exit 1
}
# Set default log file path if none is defined
if (-not (Get-Variable -Name LogFilePath -Scope Script -ErrorAction SilentlyContinue) -and
    -not (Get-Variable -Name LogFilePath -Scope Global -ErrorAction SilentlyContinue)) {
    $logDir = $env:LAB_LOG_DIR
    if (-not $logDir) {
        if ($isWindowsOS) { $logDir = 'C:\\temp' } else { $logDir = [System.IO.Path]::GetTempPath() }
    }
    if (-not (Test-Path $logDir)) { New-Item -ItemType Directory -Path $logDir -Force | Out-Null }
    $script:LogFilePath = Join-Path $logDir 'lab.log'
}
# Fallback inline logger in case dot-sourcing failed
if (-not (Get-Command Write-CustomLog -ErrorAction SilentlyContinue)) {
    function Write-CustomLog {
        param(
            [string]$Message,
            [ValidateSet('INFO','WARN','ERROR')] [string]$Level = 'INFO'
        )
        $levelIdx = @{ INFO = 1; WARN = 1; ERROR = 0 }[$Level]
        if (-not (Get-Variable -Name LogFilePath -Scope Script -ErrorAction SilentlyContinue)) {
            $logDir = $env:LAB_LOG_DIR
            if (-not $logDir) { $logDir = if ($isWindowsOS) { 'C:\\temp' } else { [System.IO.Path]::GetTempPath() } }
            $script:LogFilePath = Join-Path $logDir 'lab.log'
        }
        if (-not (Get-Variable -Name ConsoleLevel -Scope Script -ErrorAction SilentlyContinue)) {
            $script:ConsoleLevel = 1
        }
        $ts  = Get-Date -Format 'yyyy-MM-dd HH:mm:ss'
        $fmt = "[$ts] [$Level] $Message"
        $fmt | Out-File -FilePath $script:LogFilePath -Encoding utf8 -Append
        if ($levelIdx -le $script:ConsoleLevel) {
            $color = @{ INFO='Gray'; WARN='Yellow'; ERROR='Red' }[$Level]
            Write-Host $fmt -ForegroundColor $color
        }
    }
    function Read-LoggedInput {
        [CmdletBinding()]
        param(
            [Parameter(Mandatory)][string]$Prompt,
            [switch]$AsSecureString
        )
        if ($AsSecureString) {
            Write-CustomLog "$Prompt (secure input)"
            return Read-Host -Prompt $Prompt -AsSecureString
        }
        $answer = Read-Host -Prompt $Prompt
        Write-CustomLog "$($Prompt): $answer"
        return $answer
    }
}
# Load config helper
$labUtilsDir = Join-Path $scriptRoot 'lab_utils'
$labConfigScript = Join-Path $labUtilsDir 'Get-LabConfig.ps1'
$formatScript    = Join-Path $labUtilsDir 'Format-Config.ps1'
if (-not (Test-Path $labConfigScript)) {
    if (-not (Test-Path $labUtilsDir)) {
        New-Item -ItemType Directory -Path $labUtilsDir -Force | Out-Null
    }
    $labConfigUrl = 'https://raw.githubusercontent.com/wizzense/opentofu-lab-automation/main/pwsh/lab_utils/Get-LabConfig.ps1'
    Invoke-WebRequest -Uri $labConfigUrl -OutFile $labConfigScript
}
if (-not (Test-Path $formatScript)) {
    if (-not (Test-Path $labUtilsDir)) {
        New-Item -ItemType Directory -Path $labUtilsDir -Force | Out-Null
    }
    $formatUrl = 'https://raw.githubusercontent.com/wizzense/opentofu-lab-automation/main/pwsh/lab_utils/Format-Config.ps1'
    Invoke-WebRequest -Uri $formatUrl -OutFile $formatScript
}
. $labConfigScript
. $formatScript
# ------------------------------------------------
# (0) clever? message, take a second...
# ------------------------------------------------
Write-CustomLog "`nYo!"
Write-Continue "`n&lt;press any key to continue&gt;`n"
Write-CustomLog "Use `-Quiet` to reduce output."
Write-CustomLog "I know you totally read the readme first, but just in case you didn't...`n"
Write-CustomLog """
Note: In order for most of this to work you will actually have to provide a config file. 
You can either modify this command to point to the remote/local path, or leave it as is. 
You will have an opportunity after this to actually view the config file and even modify it.
At the time of this writing that feature may be broken... oh well.
The script will do the following if you proceed:
  1) Loads configs/config_files/default-config.json by default (override with -ConfigFile).
  2) Checks if command-line Git is installed and in PATH.
     - Installs a minimal version if missing.
     - Updates PATH if installed but not found in PATH.
  3) Checks if GitHub CLI is installed and in PATH.
     - Installs GitHub CLI if missing.
     - Updates PATH if installed but not found in PATH.
     - Prompts for authentication if not already authenticated.
  4) Clones a repository from config.json -&gt; RepoUrl to config.json -&gt; LocalPath (or a default path).
  5) Invokes runner.ps1 from that repo.
"""
# Prompt for input to provide remote/local or accept default
$configOption = Read-LoggedInput -Prompt "`nEnter a remote URL or local path, or leave blank for default."
if ($configOption -match "https://") {
    Invoke-WebRequest -Uri $configOption -OutFile '.\custom-config.json'
    $ConfigFile = (Join-Path $scriptRoot "custom-config.json")
} elseif ($configOption -and (Test-Path -Path $configOption)) {
    $ConfigFile = $configOption
} else {
    $localConfigDir = Join-Path (Join-Path $scriptRoot "configs") "config_files"
    if (!(Test-Path $localConfigDir)) {
        New-Item -ItemType Directory -Path $localConfigDir | Out-Null
    }
    $configFiles = Get-ChildItem -Path $localConfigDir -Filter '*.json' -File
    if ($configFiles.Count -gt 1) {
        Write-CustomLog "Multiple configuration files found:" "INFO"
        for ($i = 0; $i -lt $configFiles.Count; $i++) {
            $num = $i + 1
            Write-CustomLog ("{0}) {1}" -f $num, $configFiles[$i].Name) "INFO" | Write-Host
        }
        $ans = Read-LoggedInput -Prompt 'Select configuration number'
        if ($ans -match '^[0-9]+$' -and [int]$ans -ge 1 -and [int]$ans -le $configFiles.Count) {
            $ConfigFile = $configFiles[[int]$ans - 1].FullName
        } else {
            $ConfigFile = $configFiles[0].FullName
        }
    } elseif ($configFiles.Count -eq 1) {
        $ConfigFile = $configFiles[0].FullName
    } else {
        $localConfigPath = Join-Path $localConfigDir "default-config.json"
        if (-not (Test-Path $localConfigPath)) {
            Invoke-WebRequest -Uri $defaultConfig -OutFile $localConfigPath
        }
        $ConfigFile = $localConfigPath
    }
}
# ------------------------------------------------
# (1) Load Configuration
# ------------------------------------------------
Write-CustomLog "==== Loading configuration file ===="
try {
    $config = Get-LabConfig -Path $ConfigFile
    Write-CustomLog "Config file loaded from $ConfigFile."
    Write-CustomLog (Format-Config -Config $config)
} catch {
    Write-Error "ERROR: Failed to load configuration file - $($_.Exception.Message)"
    exit 1
}
# ------------------------------------------------
# (2) Check &amp; Install Git for Windows
# ------------------------------------------------
Write-CustomLog "==== Checking if Git is installed ===="
$gitPath = "C:\Program Files\Git\cmd\git.exe"
if (Test-Path $gitPath) {
    Write-CustomLog "Git is already installed at: $gitPath"
} else {
    if ($Config.InstallGit -eq $true) {
        Write-CustomLog "Git is not installed. Downloading and installing Git for Windows..."
        $gitInstallerUrl = "https://github.com/git-for-windows/git/releases/download/v2.48.1.windows.1/Git-2.48.1-64-bit.exe"
        $gitInstallerPath = Join-Path -Path (Get-CrossPlatformTempPath) -ChildPath "GitInstaller.exe"
        Invoke-WebRequest -Uri $gitInstallerUrl -OutFile $gitInstallerPath -UseBasicParsing
        Write-CustomLog "Installing Git silently..."
        Start-Process -FilePath $gitInstallerPath -ArgumentList "/SILENT" -Wait -NoNewWindow
        Remove-Item -Path $gitInstallerPath -ErrorAction SilentlyContinue
        Write-CustomLog "Git installation completed."
    }
}
# Double-check Git
try {
    $gitVersion = &amp; "$gitPath" --version
    Write-CustomLog $gitVersion
    Write-CustomLog "Git is installed and working."
} catch {
    Write-Error "ERROR: Git installation failed or is not accessible. Exiting."
    exit 1
}
# ------------------------------------------------
# (2.5) Ensure PowerShell 7 is present
# ------------------------------------------------
$isWindowsOS = [System.Environment]::OSVersion.Platform -eq 'Win32NT'
if (-not $isWindowsOS) {
    Write-Error "PowerShell 7 installation via this script is only supported on Windows."
    exit 1
}
Write-CustomLog "==== Checking if PowerShell 7 is installed ===="
$pwshPath = "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
if (!(Test-Path $pwshPath)) {
    if ($Config.InstallPwsh -eq $true) {
        $pwshInstallerUrl = "https://github.com/PowerShell/PowerShell/releases/latest/download/PowerShell-7.5.1-win-x64.msi"
        $pwshInstallerPath = Join-Path -Path (Get-CrossPlatformTempPath) -ChildPath "PowerShellInstaller.msi"
        Invoke-WebRequest -Uri $pwshInstallerUrl -OutFile $pwshInstallerPath -UseBasicParsing
        Write-CustomLog "Installing PowerShell 7 silently..."
        Start-Process msiexec.exe -ArgumentList "/i `"$pwshInstallerPath`" /quiet /norestart" -Wait -Verb RunAs
        Remove-Item -Path $pwshInstallerPath -ErrorAction SilentlyContinue
        Write-CustomLog "PowerShell 7 installation completed."
    } else {
        Write-Error "PowerShell 7 is required. Set InstallPwsh=true in the config."
        exit 1
    }
}
if (!(Test-Path $pwshPath)) {
    Write-Error "ERROR: PowerShell 7 installation failed or is not accessible."
    exit 1
}
# ------------------------------------------------
# (3) Check GitHub CLI and call by explicit path
# ------------------------------------------------
Write-CustomLog "==== Checking if GitHub CLI is installed ===="
$ghExePath = "C:\Program Files\GitHub CLI\gh.exe"
if (!(Test-Path $ghExePath)) {
    if ($Config.InstallGitHubCLI -eq $true) {
        Write-CustomLog "GitHub CLI not found. Downloading from $($config.GitHubCLIInstallerUrl)..."
        $ghCliInstaller = Join-Path -Path (Get-CrossPlatformTempPath) -ChildPath "GitHubCLIInstaller.msi"
        Invoke-WebRequest -Uri $config.GitHubCLIInstallerUrl -OutFile $ghCliInstaller -UseBasicParsing
        Write-CustomLog "Installing GitHub CLI silently..."
        Start-Process msiexec.exe -ArgumentList "/i `"$ghCliInstaller`" /quiet /norestart /log `"$(Get-CrossPlatformTempPath)\ghCliInstall.log`"" -Wait -Verb RunAs
        Remove-Item -Path $ghCliInstaller -ErrorAction SilentlyContinue
        Write-CustomLog "GitHub CLI installation completed."
    }
} else {
    Write-CustomLog "GitHub CLI found at '$ghExePath'."
}
if (!(Test-Path $ghExePath)) {
    Write-Error "ERROR: gh.exe not found at '$ghExePath'. Installation may have failed."
    exit 1
}
# ------------------------------------------------
# (3.5) Check &amp; Prompt for GitHub CLI Authentication
# ------------------------------------------------
Write-CustomLog "==== Checking GitHub CLI Authentication ===="
try {
    # If not authenticated, 'gh auth status' returns non-zero exit code
    &amp; "$ghExePath" auth status 2&gt;&amp;1
    Write-CustomLog "GitHub CLI is authenticated."
}
catch {
    Write-CustomLog "GitHub CLI is not authenticated."
    # Optional: Prompt user for a personal access token
    $pat = Read-LoggedInput -Prompt "Enter your GitHub Personal Access Token (or press Enter to skip):"
    if (-not [string]::IsNullOrWhiteSpace($pat)) {
        Write-CustomLog "Attempting PAT-based GitHub CLI login..."
        try {
            $pat | &amp; "$ghExePath" auth login --hostname github.com --git-protocol https --with-token
        }
        catch {
            Write-Error "ERROR: PAT-based login failed. Please verify your token or try interactive login."
            exit 1
        }
    }
    else {
        # No PAT, attempt normal interactive login in the console
        Write-CustomLog "No PAT provided. Attempting interactive login..."
        try {
            &amp; "$ghExePath" auth login --hostname github.com --git-protocol https
        }
        catch {
            Write-Error "ERROR: Interactive login failed: $($_.Exception.Message)"
            exit 1
        }
    }
    # After the login attempt, re-check auth
    try {
        &amp; "$ghExePath" auth status 2&gt;&amp;1
        Write-CustomLog "GitHub CLI is now authenticated."
    }
    catch {
        Write-Error "ERROR: GitHub authentication failed. Please run '$ghExePath auth login' manually and re-run."
        exit 1
    }
}
# ------------------------------------------------
# Helper to update repo while preserving local config changes
function Update-RepoPreserveConfig {
    param(
        [string]$RepoPath,
        [string]$Branch,
        [string]$GitPath
    )
    Push-Location $RepoPath
    $configChanges = &amp; $GitPath status --porcelain "configs/config_files" 2&gt;$null
    $backupDir = $null
    if ($configChanges -and (Test-Path 'configs/config_files')) {
        $backupDir = Join-Path $RepoPath 'config_backup'
        Write-CustomLog "Backing up local config changes to $backupDir" 'INFO'
        if (Test-Path $backupDir) { Remove-Item -Recurse -Force $backupDir }
        Copy-Item -Path 'configs/config_files' -Destination $backupDir -Recurse -Force
        &amp; $GitPath stash push -u -- 'configs/config_files' | Out-Null
    }
    &amp; $GitPath pull origin $Branch --quiet 2&gt;&amp;1 &gt;&gt; "$(Get-CrossPlatformTempPath)\git.log"
    if ($configChanges -and (Test-Path $backupDir)) {
        Write-CustomLog 'Restoring backed up config files' 'INFO'
        Copy-Item -Path (Join-Path $backupDir '*') -Destination 'configs/config_files' -Recurse -Force
        Remove-Item -Recurse -Force $backupDir -ErrorAction SilentlyContinue
        &amp; $GitPath stash drop --quiet | Out-Null
    }
    Pop-Location
}
# ------------------------------------------------
# (4) Clone or Update Repository (using explicit Git/gh)
# ------------------------------------------------
Write-CustomLog "==== Cloning or updating the target repository ===="
try {
    &amp; "$ghExePath" auth status 2&gt;&amp;1 | Out-Null
} catch {
    Write-Error "GitHub CLI is not authenticated. Please run '$ghExePath auth login' and re-run this script."
    exit 1
}
if (-not $config.RepoUrl) {
    Write-Error "ERROR: config.json does not specify 'RepoUrl'."
    exit 1
}
# Define local path (fallback if not in config)
$localPath = $config.LocalPath
$localPath = if (-not $localPath -or [string]::IsNullOrWhiteSpace($localPath)) {
    if ($isWindowsOS) {
        Get-CrossPlatformTempPath
    } else {
        [System.IO.Path]::GetTempPath()
    }
} else {
    $localPath
}
$localPath = [System.Environment]::ExpandEnvironmentVariables($localPath)
# Ensure local directory exists
Write-CustomLog "Ensuring local path '$localPath' exists..."
if (!(Test-Path $localPath)) {
    New-Item -ItemType Directory -Path $localPath -Force | Out-Null
}
# Define repo path
$repoName = ($config.RepoUrl -split '/')[-1] -replace "\.git$", ""
$repoPath = Join-Path $localPath $repoName
if (-not $repoPath) {
    Write-Error "ERROR: Repository path could not be determined. Check config.json and retry."
    exit 1
}
# Configure git safe.directory to avoid dubious ownership errors
# Use GetFullPath so path need not exist yet
$resolvedRepoPath = [System.IO.Path]::GetFullPath($repoPath)
&amp; "$gitPath" config --global --add safe.directory $resolvedRepoPath 2&gt;$null
if (!(Test-Path $repoPath)) {
    Write-CustomLog "Cloning repository from $($config.RepoUrl) to $repoPath..."
    $prevEAP = $ErrorActionPreference
    $ErrorActionPreference = 'Continue'
    &amp; "$ghExePath" repo clone $config.RepoUrl $repoPath -- -q 2&gt;&amp;1 | Tee-Object -FilePath "$(Get-CrossPlatformTempPath)\gh_clone_log.txt"
    $ghExit = $LASTEXITCODE
    $ErrorActionPreference = $prevEAP
    if ($ghExit -ne 0 -or !(Test-Path $repoPath)) {
        Write-CustomLog "GitHub CLI clone failed or directory not created. Trying git clone..."
        
        # Remove existing directory if it exists and is empty/problematic
        if (Test-Path $repoPath) {
            try {
                Remove-Item -Path $repoPath -Recurse -Force -ErrorAction SilentlyContinue
                Write-CustomLog "Removed existing problematic directory: $repoPath"
            } catch {
                Write-CustomLog "Warning: Could not remove existing directory: $repoPath"
            }
        }
        
        &amp; "$gitPath" clone $config.RepoUrl $repoPath --quiet 2&gt;&amp;1 | Tee-Object -FilePath "$(Get-CrossPlatformTempPath)\git_clone_log.txt"
        $gitExit = $LASTEXITCODE
        
        # Handle Windows-specific checkout failures due to invalid filenames
        if ($gitExit -ne 0 -and $isWindowsOS -and (Test-Path $repoPath)) {
            Write-CustomLog "Git clone failed, likely due to Windows filename restrictions. Attempting recovery..."
            Push-Location $repoPath
            try {
                # Restore files that can be checked out on Windows
                &amp; "$gitPath" restore --source=HEAD :/ 2&gt;&amp;1 | Out-Null
                Write-CustomLog "Attempted file restoration. Repository may be partially functional."
                $gitExit = 0  # Consider this a success for Windows
            } catch {
                Write-CustomLog "File restoration failed: $_"
            } finally {
                Pop-Location
            }
        }
        
        if ($gitExit -ne 0 -or !(Test-Path $repoPath)) {
            Write-Error "ERROR: Repository cloning failed. Check logs: $(Get-CrossPlatformTempPath)\gh_clone_log.txt and $(Get-CrossPlatformTempPath)\git_clone_log.txt"
            if (Test-Path "$(Get-CrossPlatformTempPath)\gh_clone_log.txt") {
                Write-Host '--- gh_clone_log.txt ---' -ForegroundColor Yellow
                Get-Content "$(Get-CrossPlatformTempPath)\gh_clone_log.txt" | Out-Host
            }
            if (Test-Path "$(Get-CrossPlatformTempPath)\git_clone_log.txt") {
                Write-Host '--- git_clone_log.txt ---' -ForegroundColor Yellow
                Get-Content "$(Get-CrossPlatformTempPath)\git_clone_log.txt" | Out-Host
            }
            exit 1
        }
    }
}
# Immediately check directory contents after clone
if ((Get-ChildItem -Path $repoPath -Recurse -ErrorAction SilentlyContinue | Measure-Object).Count -eq 0) {
    Write-Error "ERROR: Repo directory $repoPath is empty after clone. Check clone logs above."
    if (Test-Path "$(Get-CrossPlatformTempPath)\gh_clone_log.txt") {
        Write-Host '--- gh_clone_log.txt ---' -ForegroundColor Yellow
        Get-Content "$(Get-CrossPlatformTempPath)\gh_clone_log.txt" | Out-Host
    }
    if (Test-Path "$(Get-CrossPlatformTempPath)\git_clone_log.txt") {
        Write-Host '--- git_clone_log.txt ---' -ForegroundColor Yellow
        Get-Content "$(Get-CrossPlatformTempPath)\git_clone_log.txt" | Out-Host
    }
    exit 1
}
# Ensure the desired branch is checked out and up to date
Push-Location $repoPath
&amp; "$gitPath" fetch --all --quiet 2&gt;&amp;1 &gt;&gt; "$env:TEMP\git.log"
# Avoid noisy checkout messages when already on the target branch
$currentBranch = (&amp; "$gitPath" rev-parse --abbrev-ref HEAD).Trim()
$checkoutCode = 0
if ($currentBranch -ne $targetBranch) {
    $prevEAP = $ErrorActionPreference
    $ErrorActionPreference = 'Continue'
    $null = &amp; "$gitPath" checkout $targetBranch 2&gt;&amp;1
    $checkoutCode = $LASTEXITCODE
    $ErrorActionPreference = $prevEAP
}
if ($checkoutCode -ne 0) {
    Write-Warning "Branch '$targetBranch' not found. Using current branch."
} else {
    &amp; "$gitPath" pull origin $targetBranch --quiet 2&gt;&amp;1 &gt;&gt; "$env:TEMP\git.log"
}
Pop-Location
# ------------------------------------------------
# (5) Invoke the Runner Script
# ------------------------------------------------
Write-CustomLog "==== Invoking the runner script ===="
$runnerScriptName = $config.RunnerScriptName
if (-not $runnerScriptName) {
    Write-Warning "No runner script specified in config. Exiting gracefully."
    exit 0
}
Set-Location $repoPath
# Robust path resolution for runner script
if ([System.IO.Path]::IsPathRooted($runnerScriptName)) {
    $runnerScriptPath = $runnerScriptName
} else {
    $runnerScriptPath = Join-Path $repoPath $runnerScriptName
}
Write-Host "[DEBUG] ConfigFile: $ConfigFile" -ForegroundColor Cyan
Write-Host "[DEBUG] repoPath: $repoPath" -ForegroundColor Cyan
Write-Host "[DEBUG] runnerScriptName: $runnerScriptName" -ForegroundColor Cyan
Write-Host "[DEBUG] runnerScriptPath: $runnerScriptPath" -ForegroundColor Cyan
Write-Host "[DEBUG] Directory contents of repoPath (${repoPath}):" -ForegroundColor Cyan
Get-ChildItem -Path $repoPath -Recurse | Select-Object FullName
if (!(Test-Path $runnerScriptPath)) {
    Write-Error "ERROR: Could not find runner script at $runnerScriptPath. Exiting."
    Write-Host "[DEBUG] Directory contents of repoPath (${repoPath}):" -ForegroundColor Yellow
    Get-ChildItem -Path $repoPath -Recurse | Format-List FullName | Out-Host
    Write-Host @"
Possible causes:
- The repository clone failed or is incomplete.
- The repository does not contain $runnerScriptName at its root or subdirectory.
- The wrong branch or an empty repo was cloned.
- Config file RunnerScriptName is incorrect: $runnerScriptName
Next steps:
- Check the output above for missing files.
- Verify your config.RepoUrl is correct and points to a valid repository.
- Try deleting ${repoPath} and rerunning this script.
"@ -ForegroundColor Yellow
    exit 1
}
Write-CustomLog "Running $runnerScriptPath ..."
$args = @('-NoLogo','-NoProfile','-File', $runnerScriptPath, '-ConfigFile', $ConfigFile, '-Verbosity', $Verbosity)
$proc = Start-Process -FilePath $pwshPath -ArgumentList $args -Wait -NoNewWindow -PassThru
$exitCode = $proc.ExitCode
if ($exitCode -ne 0) {
    Write-CustomLog "Runner script failed with exit code $exitCode"
    exit $exitCode
}
Write-CustomLog "`n=== Kicker script finished successfully! ==="
exit 0
', because Variables followed by colon in strings should be escaped, but it did match.</message>
                  <stack-trace>at $content | Should -Not -Match '"\s*[^"]*\$\w+:[^"]*"' -Because "Variables followed by colon in strings should be escaped", /workspaces/opentofu-lab-automation/tests/Kicker-Bootstrap.Tests.ps1:113
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Kicker-Bootstrap.Tests.ps1:113</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="kicker-bootstrap variable interpolation regression" executed="True" result="Success" success="True" time="0.0839" asserts="0" description="kicker-bootstrap variable interpolation regression">
            <results>
              <test-case description="does not use $variable: in double-quoted strings except for valid scopes" name="kicker-bootstrap variable interpolation regression.does not use $variable: in double-quoted strings except for valid scopes" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="kicker-bootstrap repo structure simulation" executed="True" result="Success" success="True" time="0.0933" asserts="0" description="kicker-bootstrap repo structure simulation">
            <results>
              <test-case description="finds runner script in simulated repo structure" name="kicker-bootstrap repo structure simulation.finds runner script in simulated repo structure" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/kicker-bootstrap.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0861" asserts="0" description="/workspaces/opentofu-lab-automation/tests/kicker-bootstrap.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="kicker-bootstrap Tests" executed="True" result="Ignored" success="True" time="0.0375" asserts="0" description="kicker-bootstrap Tests">
            <results>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0042" asserts="0" description="kicker-bootstrap Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="kicker-bootstrap Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="kicker-bootstrap Tests.Script Structure Validation.should follow naming conventions" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="kicker-bootstrap Tests.Script Structure Validation.should define expected functions" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0086" asserts="0" description="kicker-bootstrap Tests.Parameter Validation">
                <results>
                  <test-case description="should accept ConfigFile parameter" name="kicker-bootstrap Tests.Parameter Validation.should accept ConfigFile parameter" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Quiet parameter" name="kicker-bootstrap Tests.Parameter Validation.should accept Quiet parameter" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Verbosity parameter" name="kicker-bootstrap Tests.Parameter Validation.should accept Verbosity parameter" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Installation Tests" executed="True" result="Ignored" success="True" time="0.0128" asserts="0" description="kicker-bootstrap Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="kicker-bootstrap Tests.Installation Tests.should validate prerequisites" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle download failures gracefully" name="kicker-bootstrap Tests.Installation Tests.should handle download failures gracefully" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should verify installation success" name="kicker-bootstrap Tests.Installation Tests.should verify installation success" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Get-CrossPlatformTempPath Function Tests" executed="True" result="Ignored" success="True" time="0.0176" asserts="0" description="kicker-bootstrap Tests.Get-CrossPlatformTempPath Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="kicker-bootstrap Tests.Get-CrossPlatformTempPath Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="kicker-bootstrap Tests.Get-CrossPlatformTempPath Function Tests.should handle execution with valid parameters" time="0.0012" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Write-Continue Function Tests" executed="True" result="Ignored" success="True" time="0.0226" asserts="0" description="kicker-bootstrap Tests.Write-Continue Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="kicker-bootstrap Tests.Write-Continue Function Tests.should be defined and accessible" time="0.0013" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept prompt parameter" name="kicker-bootstrap Tests.Write-Continue Function Tests.should accept prompt parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="kicker-bootstrap Tests.Write-Continue Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Write-CustomLog Function Tests" executed="True" result="Ignored" success="True" time="0.026" asserts="0" description="kicker-bootstrap Tests.Write-CustomLog Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="kicker-bootstrap Tests.Write-CustomLog Function Tests.should be defined and accessible" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="kicker-bootstrap Tests.Write-CustomLog Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Read-LoggedInput Function Tests" executed="True" result="Ignored" success="True" time="0.0301" asserts="0" description="kicker-bootstrap Tests.Read-LoggedInput Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="kicker-bootstrap Tests.Read-LoggedInput Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="kicker-bootstrap Tests.Read-LoggedInput Function Tests.should support common parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="kicker-bootstrap Tests.Read-LoggedInput Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="kicker-bootstrap Tests.Update-RepoPreserveConfig Function Tests" executed="True" result="Ignored" success="True" time="0.0352" asserts="0" description="kicker-bootstrap Tests.Update-RepoPreserveConfig Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="kicker-bootstrap Tests.Update-RepoPreserveConfig Function Tests.should be defined and accessible" time="0.0012" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="kicker-bootstrap Tests.Update-RepoPreserveConfig Function Tests.should handle execution with valid parameters" time="0.0012" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Kickstart-Bootstrap.Tests.ps1" executed="True" result="Success" success="True" time="0.0319" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Kickstart-Bootstrap.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="kickstart-bootstrap script" executed="True" result="Success" success="True" time="0.0118" asserts="0" description="kickstart-bootstrap script">
            <results>
              <test-case description="exists under pwsh" name="kickstart-bootstrap script.exists under pwsh" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="references kickstart.cfg" name="kickstart-bootstrap script.references kickstart.cfg" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Logger.Tests.ps1" executed="True" result="Success" success="True" time="0.0915" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Logger.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-CustomLog" executed="True" result="Success" success="True" time="0.0242" asserts="0" description="Write-CustomLog">
            <results>
              <test-case description="works when LogFilePath variable is not defined" name="Write-CustomLog.works when LogFilePath variable is not defined" time="0.004" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="works under strict mode without global variable" name="Write-CustomLog.works under strict mode without global variable" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="appends to log file when LogFilePath is set" name="Write-CustomLog.appends to log file when LogFilePath is set" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="defaults to LogFilePath variable when not provided" name="Write-CustomLog.defaults to LogFilePath variable when not provided" time="0.0049" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Read-LoggedInput" executed="True" result="Success" success="True" time="0.0657" asserts="0" description="Read-LoggedInput">
            <results>
              <test-case description="logs prompt and input" name="Read-LoggedInput.logs prompt and input" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="handles secure strings without logging value" name="Read-LoggedInput.handles secure strings without logging value" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1" executed="True" result="Failure" success="False" time="0.1053" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-MenuSelection" executed="True" result="Failure" success="False" time="0.0798" asserts="0" description="Get-MenuSelection">
            <results>
              <test-suite type="TestFixture" name="Get-MenuSelection.returns all items when user types all" executed="True" result="Failure" success="False" time="0.0201" asserts="0" description="Get-MenuSelection.returns all items when user types all">
                <results>
                  <test-case description="returns all items" name="Get-MenuSelection.returns all items when user types all.returns all items" time="0.0152" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected @('0001_Test.ps1', '0002_Other.ps1'), but got $null.</message>
                      <stack-trace>at $sel | Should -Be $items, /workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1:16
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1:16</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-MenuSelection.returns item by prefix" executed="True" result="Failure" success="False" time="0.0589" asserts="0" description="Get-MenuSelection.returns item by prefix">
                <results>
                  <test-case description="returns item by prefix" name="Get-MenuSelection.returns item by prefix.returns item by prefix" time="0.0357" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected '0002_Other.ps1', but got $null.</message>
                      <stack-trace>at $sel | Should -Be @('0002_Other.ps1'), /workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1:25
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Menu.Tests.ps1:25</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-MenuSelection.returns empty array when user types exit" executed="True" result="Success" success="True" time="0.0686" asserts="0" description="Get-MenuSelection.returns empty array when user types exit">
                <results>
                  <test-case description="returns empty array" name="Get-MenuSelection.returns empty array when user types exit.returns empty array" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get-MenuSelection.handles invalid input gracefully" executed="True" result="Success" success="True" time="0.0751" asserts="0" description="Get-MenuSelection.handles invalid input gracefully">
                <results>
                  <test-case description="returns empty array after max retries" name="Get-MenuSelection.handles invalid input gracefully.returns empty array after max retries" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Network.Tests.ps1" executed="True" result="Failure" success="False" time="0.0782" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Network.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Network Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests">
            <results>
              <test-suite type="TestFixture" name="Network Tests.Script Structure Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="Network Tests.Script Structure Validation.should have valid PowerShell syntax" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should follow naming conventions" name="Network Tests.Script Structure Validation.should follow naming conventions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should define expected functions" name="Network Tests.Script Structure Validation.should define expected functions" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Network Tests.Parameter Validation" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Uri parameter" name="Network Tests.Parameter Validation.should accept Uri parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should accept OutFile parameter" name="Network Tests.Parameter Validation.should accept OutFile parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should accept UseBasicParsing parameter" name="Network Tests.Parameter Validation.should accept UseBasicParsing parameter" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Network Tests.Installation Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Installation Tests">
                <results>
                  <test-case description="should validate prerequisites" name="Network Tests.Installation Tests.should validate prerequisites" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle download failures gracefully" name="Network Tests.Installation Tests.should handle download failures gracefully" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should verify installation success" name="Network Tests.Installation Tests.should verify installation success" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Network Tests.Invoke-LabWebRequest Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Invoke-LabWebRequest Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="Network Tests.Invoke-LabWebRequest Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="Network Tests.Invoke-LabWebRequest Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="Network Tests.Invoke-LabWebRequest Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Network Tests.Invoke-WebRequest Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Invoke-WebRequest Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="Network Tests.Invoke-WebRequest Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="Network Tests.Invoke-WebRequest Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="Network Tests.Invoke-WebRequest Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Network Tests.Invoke-LabNpm Function Tests" executed="True" result="Failure" success="False" time="0" asserts="0" description="Network Tests.Invoke-LabNpm Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="Network Tests.Invoke-LabNpm Function Tests.should be defined and accessible" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should support common parameters" name="Network Tests.Invoke-LabNpm Function Tests.should support common parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="should handle execution with valid parameters" name="Network Tests.Invoke-LabNpm Function Tests.should handle execution with valid parameters" time="0" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/NodeScripts.Tests.ps1" executed="True" result="Failure" success="False" time="0.081" asserts="0" description="/workspaces/opentofu-lab-automation/tests/NodeScripts.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Node installation scripts" executed="True" result="Failure" success="False" time="0.0483" asserts="0" description="Node installation scripts">
            <results>
              <test-case description="uses Node_Dependencies.Node.InstallerUrl when installing Node" name="Node installation scripts.uses Node_Dependencies.Node.InstallerUrl when installing Node" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="does nothing when InstallNode is $false" name="Node installation scripts.does nothing when InstallNode is $false" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="installs packages listed under GlobalPackages" name="Node installation scripts.installs packages listed under GlobalPackages" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="falls back to boolean flags when GlobalPackages is missing" name="Node installation scripts.falls back to boolean flags when GlobalPackages is missing" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="honours -WhatIf for Install-GlobalPackage" name="Node installation scripts.honours -WhatIf for Install-GlobalPackage" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="uses NpmPath from Node_Dependencies when installing project deps" name="Node installation scripts.uses NpmPath from Node_Dependencies when installing project deps" time="0" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>This test should run but it did not. Most likely a setup in some parent block failed.</message>
                  <stack-trace />
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/PathUtils.Tests.ps1" executed="True" result="Failure" success="False" time="0.0354" asserts="0" description="/workspaces/opentofu-lab-automation/tests/PathUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Normalize-RelativePath" executed="True" result="Failure" success="False" time="0.0212" asserts="0" description="Normalize-RelativePath">
            <results>
              <test-case description="joins mixed separators into platform path" name="Normalize-RelativePath.joins mixed separators into platform path" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                  <stack-trace>at Normalize-RelativePath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/PathUtils.ps1:10
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/PathUtils.Tests.ps1:11</stack-trace>
                </failure>
              </test-case>
              <test-case description="handles trailing separators" name="Normalize-RelativePath.handles trailing separators" time="0.0056" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                  <stack-trace>at Normalize-RelativePath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/PathUtils.ps1:10
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/PathUtils.Tests.ps1:17</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Reset-Machine.Tests.ps1" executed="True" result="Ignored" success="True" time="0.0266" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Reset-Machine.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Reset-Machine script" executed="True" result="Ignored" success="True" time="0.0059" asserts="0" description="Reset-Machine script">
            <results>
              <test-case description="invokes sysprep and configures Remote Desktop on Windows" name="Reset-Machine script.invokes sysprep and configures Remote Desktop on Windows" time="0.0009" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="calls Restart-Computer on Linux" name="Reset-Machine script.calls Restart-Computer on Linux" time="0.0013" asserts="0" success="False" result="Ignored" executed="False" />
              <test-case description="returns exit code 1 for unknown platform" name="Reset-Machine script.returns exit code 1 for unknown platform" time="0.0012" asserts="0" success="False" result="Ignored" executed="False" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Resolve-ProjectPath.Tests.ps1" executed="True" result="Failure" success="False" time="0.0805" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Resolve-ProjectPath.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Resolve-ProjectPath" executed="True" result="Failure" success="False" time="0.0658" asserts="0" description="Resolve-ProjectPath">
            <results>
              <test-case description="finds file recursively and after move" name="Resolve-ProjectPath.finds file recursively and after move" time="0.0189" asserts="0" success="True" result="Success" executed="True" />
              <test-case description="resolves path from path-index.yaml" name="Resolve-ProjectPath.resolves path from path-index.yaml" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                  <stack-trace>at Normalize-RelativePath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/PathUtils.ps1:10
at Resolve-ProjectPath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/Resolve-ProjectPath.ps1:27
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Resolve-ProjectPath.Tests.ps1:32</stack-trace>
                </failure>
              </test-case>
              <test-case description="resolves direct index entry with normalized separators" name="Resolve-ProjectPath.resolves direct index entry with normalized separators" time="0.0157" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>ParameterBindingValidationException: Cannot bind argument to parameter 'Path' because it is null.</message>
                  <stack-trace>at Normalize-RelativePath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/PathUtils.ps1:10
at Resolve-ProjectPath, /workspaces/opentofu-lab-automation/pwsh/lab_utils/Resolve-ProjectPath.ps1:22
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Resolve-ProjectPath.Tests.ps1:44</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1" executed="True" result="Failure" success="False" time="1.6767" asserts="0" description="/workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="runner.ps1 syntax" executed="True" result="Success" success="True" time="0.0255" asserts="0" description="runner.ps1 syntax">
            <results>
              <test-case description="parses without errors" name="runner.ps1 syntax.parses without errors" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="runner.ps1 configuration" executed="True" result="Success" success="True" time="0.0354" asserts="0" description="runner.ps1 configuration">
            <results>
              <test-case description="loads default configuration without errors" name="runner.ps1 configuration.loads default configuration without errors" time="0.0077" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="runner.ps1 script selection" executed="True" result="Failure" success="False" time="1.5927" asserts="0" description="runner.ps1 script selection">
            <results>
              <test-case description="runs non-interactively when -Scripts is supplied" name="runner.ps1 script selection.runs non-interactively when -Scripts is supplied" time="0.1075" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/366706db-e038-4b4a-945a-1bdb943ac030/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/366706db-e038-4b4a-945a-1bdb943ac030/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:101</stack-trace>
                </failure>
              </test-case>
              <test-case description="uses pwsh from PSHOME when not in PATH" name="runner.ps1 script selection.uses pwsh from PSHOME when not in PATH" time="0.096" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="relaunches under pwsh when invoked from PowerShell 5" name="runner.ps1 script selection.relaunches under pwsh when invoked from PowerShell 5" time="0.0466" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/df9b9755-dcc6-44b7-bd9f-6bc19bd8b7d5/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/df9b9755-dcc6-44b7-bd9f-6bc19bd8b7d5/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:155</stack-trace>
                </failure>
              </test-case>
              <test-case description="exits with code 1 when -Scripts has no matching prefixes" name="runner.ps1 script selection.exits with code 1 when -Scripts has no matching prefixes" time="0.0307" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/8a988997-17a0-4bbc-bf76-2fe683d0b317/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/8a988997-17a0-4bbc-bf76-2fe683d0b317/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:169</stack-trace>
                </failure>
              </test-case>
              <test-case description="continues executing all scripts even if one fails" name="runner.ps1 script selection.continues executing all scripts even if one fails" time="0.1006" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="continues executing all scripts when one throws" name="runner.ps1 script selection.continues executing all scripts when one throws" time="0.1167" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="runs only cleanup script when 0000 is combined with others in Auto mode" name="runner.ps1 script selection.runs only cleanup script when 0000 is combined with others in Auto mode" time="0.0579" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="forces script execution when flag disabled using -Force" name="runner.ps1 script selection.forces script execution when flag disabled using -Force" time="0.1151" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="skips script action when flag disabled and -Force not used" name="runner.ps1 script selection.skips script action when flag disabled and -Force not used" time="0.0632" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="reports success when script omits an exit statement" name="runner.ps1 script selection.reports success when script omits an exit statement" time="0.1531" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: Could not find Command Read-LoggedInput</message>
                  <stack-trace />
                </failure>
              </test-case>
              <test-case description="suppresses informational logs when -Verbosity silent is used" name="runner.ps1 script selection.suppresses informational logs when -Verbosity silent is used" time="0.0289" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/f1fd44c8-a305-4bc2-866d-dbf544ae1b35/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/f1fd44c8-a305-4bc2-866d-dbf544ae1b35/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:357</stack-trace>
                </failure>
              </test-case>
              <test-case description="suppresses informational logs when -Quiet is used" name="runner.ps1 script selection.suppresses informational logs when -Quiet is used" time="0.0888" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/5d0f576e-02e4-489b-a966-21c23402b39c/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/5d0f576e-02e4-489b-a966-21c23402b39c/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:383</stack-trace>
                </failure>
              </test-case>
              <test-case description="suppresses informational logs when -Verbosity silent is used" name="runner.ps1 script selection.suppresses informational logs when -Verbosity silent is used" time="0.0265" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/8e61d206-24d7-4f45-a9e9-23beab778380/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/8e61d206-24d7-4f45-a9e9-23beab778380/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:409</stack-trace>
                </failure>
              </test-case>
              <test-case description="prompts twice when -Auto is used without -Scripts" name="runner.ps1 script selection.prompts twice when -Auto is used without -Scripts" time="0.0285" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/3a2f9b96-5cf2-4174-a4f7-084789e62c2b/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/3a2f9b96-5cf2-4174-a4f7-084789e62c2b/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:431</stack-trace>
                </failure>
              </test-case>
              <test-case description="handles empty or invalid selection by logging and doing nothing" name="runner.ps1 script selection.handles empty or invalid selection by logging and doing nothing" time="0.0354" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/b8383c67-605c-4f2e-a1f1-5b7f9c9af222/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/b8383c67-605c-4f2e-a1f1-5b7f9c9af222/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:452</stack-trace>
                </failure>
              </test-case>
              <test-case description="logs script output exactly once" name="runner.ps1 script selection.logs script output exactly once" time="0.0336" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>CommandNotFoundException: The term '/tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/72663523-d9d0-4049-a193-53c4683241f4/pwsh/lab_utils/PathUtils.ps1' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                  <stack-trace>at &lt;ScriptBlock&gt;, /tmp/a908d599-11a4-4b4f-af41-92c45fb72d47/72663523-d9d0-4049-a193-53c4683241f4/pwsh/runner.ps1:24
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:473</stack-trace>
                </failure>
              </test-case>
              <test-case description="pipes Get-SystemInfo output to the caller" name="runner.ps1 script selection.pipes Get-SystemInfo output to the caller" time="0.2667" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>Expected regular expression 'ComputerName' to match 'The argument './runner.ps1' is not recognized as the name of a script file. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
Usage: pwsh[.exe] [-Login] [[-File] &lt;filePath&gt; [args]]
                  [-Command { - | &lt;script-block&gt; [-args &lt;arg-array&gt;]
                                | &lt;string&gt; [&lt;CommandParameters&gt;] } ]
                  [-CommandWithArgs &lt;string&gt; [&lt;CommandParameters&gt;]
                  [-ConfigurationName &lt;string&gt;] [-ConfigurationFile &lt;filePath&gt;]
                  [-CustomPipeName &lt;string&gt;] [-EncodedCommand &lt;Base64EncodedCommand&gt;]
                  [-ExecutionPolicy &lt;ExecutionPolicy&gt;] [-InputFormat {Text | XML}]
                  [-Interactive] [-MTA] [-NoExit] [-NoLogo] [-NonInteractive] [-NoProfile]
                  [-NoProfileLoadTime] [-OutputFormat {Text | XML}] 
                  [-SettingsFile &lt;filePath&gt;] [-SSHServerMode] [-STA] 
                  [-Version] [-WindowStyle &lt;style&gt;] 
                  [-WorkingDirectory &lt;directoryPath&gt;]
       pwsh[.exe] -h | -Help | -? | /?
PowerShell Online Help https://aka.ms/powershell-docs
All parameters are case-insensitive.', but it did not match.</message>
                  <stack-trace>at $text | Should -Match 'ComputerName', /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:495
at &lt;ScriptBlock&gt;, /workspaces/opentofu-lab-automation/tests/Runner.Tests.ps1:495</stack-trace>
                </failure>
              </test-case>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-LabConfig" executed="True" result="Success" success="True" time="1.6311" asserts="0" description="Set-LabConfig">
            <results>
              <test-case description="updates selections and saves to JSON" name="Set-LabConfig.updates selections and saves to JSON" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/runner.Tests.ps1" executed="True" result="Ignored" success="True" time="0.131" asserts="0" description="/workspaces/opentofu-lab-automation/tests/runner.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="runner Tests" executed="True" result="Ignored" success="True" time="0.06" asserts="0" description="runner Tests">
            <results>
              <test-suite type="TestFixture" name="runner Tests.Script Structure Validation" executed="True" result="Ignored" success="True" time="0.0057" asserts="0" description="runner Tests.Script Structure Validation">
                <results>
                  <test-case description="should have valid PowerShell syntax" name="runner Tests.Script Structure Validation.should have valid PowerShell syntax" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should follow naming conventions" name="runner Tests.Script Structure Validation.should follow naming conventions" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should define expected functions" name="runner Tests.Script Structure Validation.should define expected functions" time="0.001" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Parameter Validation" executed="True" result="Ignored" success="True" time="0.0151" asserts="0" description="runner Tests.Parameter Validation">
                <results>
                  <test-case description="should accept Quiet parameter" name="runner Tests.Parameter Validation.should accept Quiet parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Verbosity parameter" name="runner Tests.Parameter Validation.should accept Verbosity parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept ConfigFile parameter" name="runner Tests.Parameter Validation.should accept ConfigFile parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Auto parameter" name="runner Tests.Parameter Validation.should accept Auto parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Scripts parameter" name="runner Tests.Parameter Validation.should accept Scripts parameter" time="0.001" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should accept Force parameter" name="runner Tests.Parameter Validation.should accept Force parameter" time="0.0011" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Configuration Tests" executed="True" result="Ignored" success="True" time="0.0196" asserts="0" description="runner Tests.Configuration Tests">
                <results>
                  <test-case description="should backup existing configuration" name="runner Tests.Configuration Tests.should backup existing configuration" time="0.001" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should validate configuration changes" name="runner Tests.Configuration Tests.should validate configuration changes" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle rollback on failure" name="runner Tests.Configuration Tests.should handle rollback on failure" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Resolve-IndexPath Function Tests" executed="True" result="Ignored" success="True" time="0.0229" asserts="0" description="runner Tests.Resolve-IndexPath Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Resolve-IndexPath Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Resolve-IndexPath Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.ConvertTo-Hashtable Function Tests" executed="True" result="Ignored" success="True" time="0.026" asserts="0" description="runner Tests.ConvertTo-Hashtable Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.ConvertTo-Hashtable Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.ConvertTo-Hashtable Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Get-ScriptConfigFlag Function Tests" executed="True" result="Ignored" success="True" time="0.0291" asserts="0" description="runner Tests.Get-ScriptConfigFlag Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Get-ScriptConfigFlag Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Get-ScriptConfigFlag Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Get-NestedConfigValue Function Tests" executed="True" result="Ignored" success="True" time="0.0323" asserts="0" description="runner Tests.Get-NestedConfigValue Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Get-NestedConfigValue Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Get-NestedConfigValue Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Set-NestedConfigValue Function Tests" executed="True" result="Ignored" success="True" time="0.0354" asserts="0" description="runner Tests.Set-NestedConfigValue Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Set-NestedConfigValue Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Set-NestedConfigValue Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Apply-RecommendedDefaults Function Tests" executed="True" result="Ignored" success="True" time="0.0385" asserts="0" description="runner Tests.Apply-RecommendedDefaults Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Apply-RecommendedDefaults Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Apply-RecommendedDefaults Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Set-LabConfig Function Tests" executed="True" result="Ignored" success="True" time="0.0424" asserts="0" description="runner Tests.Set-LabConfig Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Set-LabConfig Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should support common parameters" name="runner Tests.Set-LabConfig Function Tests.should support common parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Set-LabConfig Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Edit-PrimitiveValue Function Tests" executed="True" result="Ignored" success="True" time="0.0456" asserts="0" description="runner Tests.Edit-PrimitiveValue Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Edit-PrimitiveValue Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Edit-PrimitiveValue Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Edit-Section Function Tests" executed="True" result="Ignored" success="True" time="0.0487" asserts="0" description="runner Tests.Edit-Section Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Edit-Section Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Edit-Section Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Invoke-Scripts Function Tests" executed="True" result="Ignored" success="True" time="0.0519" asserts="0" description="runner Tests.Invoke-Scripts Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Invoke-Scripts Function Tests.should be defined and accessible" time="0.0008" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Invoke-Scripts Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Select-Scripts Function Tests" executed="True" result="Ignored" success="True" time="0.055" asserts="0" description="runner Tests.Select-Scripts Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Select-Scripts Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Select-Scripts Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="runner Tests.Prompt-Scripts Function Tests" executed="True" result="Ignored" success="True" time="0.0581" asserts="0" description="runner Tests.Prompt-Scripts Function Tests">
                <results>
                  <test-case description="should be defined and accessible" name="runner Tests.Prompt-Scripts Function Tests.should be defined and accessible" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                  <test-case description="should handle execution with valid parameters" name="runner Tests.Prompt-Scripts Function Tests.should handle execution with valid parameters" time="0.0007" asserts="0" success="False" result="Ignored" executed="False" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/opentofu-lab-automation/tests/RunnerScripts.Tests.ps1" executed="True" result="Failure" success="False" time="2.8127" asserts="0" description="/workspaces/opentofu-lab-automation/tests/RunnerScripts.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Runner scripts parameter and command checks" executed="True" result="Failure" success="False" time="2.2311" asserts="0" description="Runner scripts parameter and command checks">
            <results>
              <test-case description="resolves PSScriptRoot when run with pwsh -File" name="Runner scripts parameter and command checks.resolves PSScriptRoot when run with pwsh -File" time="0.8055" asserts="0" success="False" result="Failure" executed="True">
                <failure>
                  <message>