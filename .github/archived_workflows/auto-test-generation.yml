---
name: Auto Test Generation (Main)

on:
 push:
 paths:
 - 'pwsh/**/*.ps1'
 - '!pwsh/**/*.Tests.ps1'
 pull_request:
 paths:
 - 'pwsh/**/*.ps1'
 - '!pwsh/**/*.Tests.ps1'
 workflow_dispatch:
 inputs:
 force_regenerate:
 description: 'Force regenerate all tests'
 required: false
 default: 'false'
 type: boolean

jobs:
 setup:
 uses: ./.github/workflows/auto-test-generation-setup.yml
 with:
 force_regenerate: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.force_regenerate == 'true' }}
 secrets: inherit

 generate-linux:
 needs: setup
 if: needs.setup.outputs.has-changes == 'true'
 uses: ./.github/workflows/auto-test-generation-execution.yml
 with:
 changed-scripts: ${{ needs.setup.outputs.changed-scripts }}
 renamed-files-json: ${{ needs.setup.outputs.renamed-files-json }}
 os: ubuntu-latest
 secrets: inherit

 generate-windows:
 needs: setup
 if: needs.setup.outputs.has-changes == 'true'
 uses: ./.github/workflows/auto-test-generation-execution.yml
 with:
 changed-scripts: ${{ needs.setup.outputs.changed-scripts }}
 renamed-files-json: ${{ needs.setup.outputs.renamed-files-json }}
 os: windows-latest
 secrets: inherit

 generate-macos:
 needs: setup
 if: needs.setup.outputs.has-changes == 'true'
 uses: ./.github/workflows/auto-test-generation-execution.yml
 with:
 changed-scripts: ${{ needs.setup.outputs.changed-scripts }}
 renamed-files-json: ${{ needs.setup.outputs.renamed-files-json }}
 os: macos-latest
 secrets: inherit

 reporting:
 needs: [setup, generate-linux, generate-windows, generate-macos]
 if: always() # Always run reporting to give a summary
 uses: ./.github/workflows/auto-test-generation-reporting.yml
 with:
 changed-scripts: ${{ needs.setup.outputs.changed-scripts }}
 renamed-files-json: ${{ needs.setup.outputs.renamed-files-json }}
 has-changes: ${{ needs.setup.outputs.has-changes }}
 generate-tests-linux-result: ${{ needs.generate-linux.result }}
 generate-tests-windows-result: ${{ needs.generate-windows.result }}
 generate-tests-macos-result: ${{ needs.generate-macos.result }}
 secrets: inherit

 summary:
 name: Workflow Summary
 runs-on: ubuntu-latest
 needs: [setup, reporting] # Depends on setup for initial info and reporting for final outcome
 if: always()
 steps:
 - name: Overall Summary
 run: |
 echo " # # Auto Test Generation Overall Summary" >> $GITHUB_STEP_SUMMARY
 echo "" >> $GITHUB_STEP_SUMMARY
 echo "| Job Area | Status | Details |" >> $GITHUB_STEP_SUMMARY
 echo "|------|--------|---------|" >> $GITHUB_STEP_SUMMARY
 echo "| Setup (Detect & Validate Naming) | ${{ needs.setup.result }} | Changed Scripts: ${{ needs.setup.outputs.has-changes }} |" >> $GITHUB_STEP_SUMMARY
 echo "| Test Generation (Linux) | ${{ needs.generate-linux.result || 'skipped' }} | OS: Linux |" >> $GITHUB_STEP_SUMMARY
 echo "| Test Generation (Windows) | ${{ needs.generate-windows.result || 'skipped' }} | OS: Windows |" >> $GITHUB_STEP_SUMMARY
 echo "| Test Generation (macOS) | ${{ needs.generate-macos.result || 'skipped' }} | OS: macOS |" >> $GITHUB_STEP_SUMMARY
 echo "| Reporting & Commit | ${{ needs.reporting.result }} | Commits and runs generated tests |" >> $GITHUB_STEP_SUMMARY

 echo "" >> $GITHUB_STEP_SUMMARY if [[ "${{ needs.setup.outputs.has-changes }}" == "true" ]]; then
 echo "## Scripts Processed:" >> $GITHUB_STEP_SUMMARY
 echo '```json' >> $GITHUB_STEP_SUMMARY
 echo '${{ needs.setup.outputs.changed-scripts }}' >> $GITHUB_STEP_SUMMARY
 echo '```' >> $GITHUB_STEP_SUMMARY

 if [[ -n "${{ needs.setup.outputs.renamed-files-json }}" && "${{ needs.setup.outputs.renamed-files-json }}" != "[]" ]]; then
 echo "## Files Renamed:" >> $GITHUB_STEP_SUMMARY
 echo '```json' >> $GITHUB_STEP_SUMMARY
 echo '${{ needs.setup.outputs.renamed-files-json }}' >> $GITHUB_STEP_SUMMARY
 echo '```' >> $GITHUB_STEP_SUMMARY
 fi
 else
 echo "No PowerShell script changes detected that required test generation." >> $GITHUB_STEP_SUMMARY
 fi

 if [[ "${{ needs.reporting.result }}" == "failure" ]]; then
 echo "" >> $GITHUB_STEP_SUMMARY
 echo " **One or more parts of the reporting/commit process failed. Check logs.**" >> $GITHUB_STEP_SUMMARY
 elif [[ "${{ needs.setup.outputs.has-changes }}" == "true" ]]; then
 echo "" >> $GITHUB_STEP_SUMMARY
 echo " Test generation and commit process completed." >> $GITHUB_STEP_SUMMARY
 fi
